<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: EBS | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/ebs/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2015-12-30T21:03:25+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elastic Block Store(EBS)をAWSのEC2にヒモ付]]></title>
    <link href="http://morizyun.github.io/blog/elastic-block-store-aws-amazon-strage/"/>
    <updated>2014-05-02T21:30:00+09:00</updated>
    <id>http://morizyun.github.io/blog/elastic-block-store-aws-amazon-strage</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774158135/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774158135&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774158135&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774158135" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />AWSのEC2にElastic Block Store(EBS)を紐付けする手順です。サーバを新規作成した際には、仕様に応じて事前にストレージの容量設計をしておくと後で不要なエラーを発生させずに、捗ります。てか、よくそこで数カ月後にハマりますw</p>

<p>昨日やっていて設定でハマってしまったので忘備録を兼ねてメモです。</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>公式ドキュメント</h2>

<p><strong><a href="http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/ebs-using-volumes.html">Amazon EBS ボリュームを使用できるようにする</a></strong><br/>
AWSは進歩がすごく早いので、ググった情報だとうまく動かず、かなりハマってしまいました。公式ドキュメントが一番信頼できると実感しています。</p>

<h2>手順</h2>

<p>AWSのコンソール画面内のEBS(Elastic Block Store)でボリュームを作成。インスタンスに紐付け。</p>

<pre>
# 用語説明
device_name => /dev/xvdx # ボリュームを割り当てると自動で設定される
mount_point => /path/to # 割り当てたいフォルダを作成
</pre>


<p>{% codeblock lang:bash %}</p>

<h1>使用可能なディスクを確認するコマンド</h1>

<p>lsblk</p>

<h1>ext4 ファイルシステムを作成</h1>

<p>sudo mkfs -t ext4 device_name</p>

<h1>ボリュームを割り当て</h1>

<p>sudo mkdir mount_point
sudo mount device_name mount_point</p>

<h1>再起動時に自動で割り当てされるように設定</h1>

<p>sudo cp /etc/fstab /etc/fstab.org
sudo vim /etc/fstab</p>

<h1>下のように書き換え</h1>

<h1>/dev/xvdx       /path/to  ext4    defaults    0       2</h1>

<h1>Waring/Errorが出なければ設定成功</h1>

<p>sudo mount -a
{% endcodeblock %}</p>

<h2>おまけ: MySQLのデータディレクトリをEBSに差し替え</h2>

<p>MySQLにログインして以下を実行すると、データベースのディレクトリが出ます。</p>

<p>{% codeblock lang:bash %}
mysql -u root -p
show variables like 'datadir';
{% endcodeblock %}</p>

<p>ここで出たデータベースのデータディレクトリを<code>/path/to/mysql/new/</code>とします。ここをEBSのフォルダに差し替えます。</p>

<p>{% codeblock lang:bash %}</p>

<h1>MySQLを停止</h1>

<p>sudo /etc/init.d/mysql stop</p>

<p>sudo vi my.cnf</p>

<h1>↓ 以下の様に変更</h1>

<p>innodb_data_home_dir=/path/to/mysql/new/
innodb_log_group_home_dir=/path/to/mysql/new/</p>

<p>sudo vi /etc/init.d/mysql</p>

<h1>↓ 以下の様に変更</h1>

<p>datadir=/path/to/mysql/new/</p>

<h1>旧ディレクトリ => 新ディレクトリへのコピー</h1>

<p>cp -pR /path/to/mysql/old/* /path/to/mysql/new/</p>

<h1>フォルダの権限変更</h1>

<p>chmod -R mysql.mysql /path/to/mysql/new</p>

<h1>MySQLを再起動</h1>

<p>/etc/init.d/mysql start</p>

<h1>動作確認(ログインできること・データ変更できることを確認)</h1>

<p>mysql -u root -p</p>

<h1>古いフォルダを削除</h1>

<p>rm -rf /path/to/mysql/old
{% endcodeblock %}</p>

<p>インフラは苦手なので、いろいろご指摘頂ければ幸いです！</p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>Special Thanks</h2>

<p><strong><a href="http://d.hatena.ne.jp/CortYuming/20120412/p1">MySQLのデータベースの場所を調べたり、ディレクトリ変更したりのメモ</a></strong></p>

<p><strong><a href="http://qiita.com/ShuM/items/1a960b4ef53f8a08dd5a">MySQLのデータディレクトリを移動する</a></strong></p>
]]></content>
  </entry>
  
</feed>
