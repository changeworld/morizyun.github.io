<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vagnrant | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/vagnrant/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-12T23:54:18+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VagrantでRails開発環境を整備 (CentOS 6.5/Nginx/mysql5.6/rbenv/ruby2.1.0)]]></title>
    <link href="http://morizyun.github.io/blog/vagrant-centos-nginx-mysql-rbenv/"/>
    <updated>2014-03-16T11:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/vagrant-centos-nginx-mysql-rbenv</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774163678/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774163678&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774163678&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774163678" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />Vagrantネタ第二弾です。今回はVagrant + Chef Soloを使って、Rails開発用のboxをローカルで作れるようにしました。具体的には、CentOS 6.5上にChef Soloで、nginx/mysql5.6/rbenv/ruby2.1.0などのベーシックな環境を自動構築します。</p>

<p>『<strong><a href="/blog/test-kitchen-vagrant-rails-rbenv-chef-serverspec/">test-kitchenでインフラのTDDに挑戦</a></strong>』でもほぼ同じ事ができます。加えて、Serverspecまでまとめで実行できるので、こちらのほうがオススメかも！</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_square.html %}</p>

<h2>Vaggrant/Chefとは？</h2>

<p>VagrantとはPC上に仮想マシンを作成することができるツール。ChefやPuppetはサーバの構成管理ツール。</p>

<h2>Vagrant のメリット</h2>

<p>{% codeblock lang:bash %}
コマンド1つでVMを立ち上げたり・止めたり・削除したりできる
ChefやPuppetと併用できるので、複数人で本番と同じ開発環境を共有できる
(開発環境を構築する際に個人のローカル環境に依存するのを避ける事ができる)
AWSやDegital Oceanなどのインスタンスもコマンド一つで立ち上げ・削除できる
{% endcodeblock %}</p>

<h2>Chef/Puppetのメリット</h2>

<p>{% codeblock lang:bash %}
サーバの構成情報をgitなどで管理できるので変更点管理・チームでの管理が容易になる
{% endcodeblock %}</p>

<h2>Vagrant</h2>

<p><strong><a href="http://www.vagrantup.com/">Vagrant 公式サイト</a></strong><br/>
パッケージをDLしてインストール。</p>

<p>vagrantをインストールしたら、boxでchefを使えるようにするためのプラグインをインストール。あと、コミュニティの作ったCookbookのインストール。</p>

<p>{% codeblock lang:bash %}
vagrant plugin install vagrant-omnibus
{% endcodeblock %}</p>

<h2>VirtualBox</h2>

<p><strong><a href="https://www.virtualbox.org/">VirtualBox 公式サイト</a></strong><br/>
パッケージをDLしてインストール。</p>

<h2>仮想マシンの作成</h2>

<p>自分の好きな場所(例は<code>~/Dropbox/Vagrant</code>)に仮想マシン用のフォルダを作成。</p>

<p>{% codeblock lang:bash %}
mkdir ~/Dropbox/vagrant
git clone https://github.com/morizyun/vagrant-rails.git vagrant-rails
cd vagrant-rails
bundle install
bundle exec berks install --path site-cookbooks
vagrant up
{% endcodeblock %}</p>

<h2>Rails プロジェクトの作成</h2>

<p>続いてRails プロジェクトを作成します。本当はスクリプトでプロジェクトを作りたかったんですが、ちょっと失敗中のため、引き続き調査。</p>

<p>{% codeblock lang:bash %}
vagrant ssh
cd /vagrant/app
rails new chef_rails --database=mysql
cd chef_rails
echo "gem 'therubyracer', platforms: :ruby" >> Gemfile
bundle install
bundle exec rake db:create
rails s
{% endcodeblock %}</p>

<h2>ブラウザでのアクセス</h2>

<p><code>http://192.168.33.10/</code>にブラウザをアクセスすると<code>app/</code>フォルダの中のファイルにアクセスできます。</p>

<p><img src="http://farm8.staticflickr.com/7136/13180940964_35ef1c8ed7.jpg" width="500" height="355" alt="スクリーンショット 2014-03-16 11.29.17"></p>

<h2>GitHubリポジトリ</h2>

<p>今回のVagrantfileをGitHubにも作っておきました！</p>

<p><strong><a href="https://github.com/morizyun/vagrant-rails">morizyun/vagrant-rails</a></strong></p>

<h2>苦労している点</h2>

<p><code>Chef</code>のノウハウがまだ全然たまってないので、なんでもないところでつまずいてずっとググっています。</p>

<p>目標はHerokuレベルで簡単にアプリをデプロイできるようになりたいなぁと夢見ています。</p>
]]></content>
  </entry>
  
</feed>
