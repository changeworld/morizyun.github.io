<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: geocoder | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/geocoder/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2015-07-05T18:40:53+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[geocoder DB - ある場所から一定距離の範囲内の緯度経度を持つレコードを抽出]]></title>
    <link href="http://morizyun.github.io/blog/geocoder-within-bounding-box/"/>
    <updated>2014-08-10T23:30:00+09:00</updated>
    <id>http://morizyun.github.io/blog/geocoder-within-bounding-box</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4844335928/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4844335928&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4844335928&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4844335928" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
位置情報を使うようなサービスで、ある緯度経度を中心として、その場所から一定距離の範囲内の緯度経度を持つレコードを抽出したいといったユースケースがあると思います。
そんな時にもGem『<strong><a href="https://github.com/alexreisner/geocoder">alexreisner/geocoder</a></strong>』がめっちゃ便利だったので共有です。</p>

<p>「<strong><a href="http://morizyun.github.io/blog/short.works-parttimer-sidejob-iphone-app/">アルバイトを10秒で探せるiPhone/Androidアプリ Short.Works</a></strong>」のアルバイト情報の抽出でも大活躍しています！</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>前置き</h2>

<p>『<strong><a href="https://github.com/alexreisner/geocoder">alexreisner/geocoder</a></strong>』の基本的な使い方は、拙著『<strong><a href="http://morizyun.github.io/blog/geocoder-rails-latitude-longitude-ruby/">geocoder 地名から緯度経度に変換 or 緯度経度から住所変換が簡単にできるgem - 酒と泪とRubyとRailsと</a></strong>』
に書いていますので、もしご興味を持って頂けるようならご一読ください＾＾</p>

<h2>一定距離の範囲内のレコードを抽出するコード</h2>

<p>ある緯度経度を中心として、その場所から一定距離の範囲内の緯度経度を持つレコードを抽出するコードです。</p>

<p>{% codeblock lang:ruby %}
class Venue &lt; ActiveRecord::Base
  reverse_geocoded_by :latitude, :longitude</p>

<p>  class &lt;&lt; self</p>

<pre><code>def within_box(distance, latitude, longitude)
  distance = distance # 単位はマイル
  center_point = [latitude, longitude] # 緯度経度
  box = Geocoder::Calculations.bounding_box(center_point, distance)
  self.within_bounding_box(box)
end
</code></pre>

<p>  end
end
{% endcodeblock %}</p>

<p>あとはコントローラなどで<code>Venue.within_box(distance, latitude, longitude)</code>と呼び出してもらえれば、与えられた緯度経度から一定の距離の範囲内にあるレコードをよしなに抽出してきてくれます。</p>

<p>ちなみに正確には<code>min_radius</code>といったオプションでより正確に範囲を指定できるようになるっぽいです！</p>

<h2>お願い</h2>

<p>GitHubの説明を斜め読みしただけなので、もし間違ってそうなら是非ツッコミお願いします！</p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>
]]></content>
  </entry>
  
</feed>
