<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Homebrew | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/homebrew/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2015-12-30T21:08:25+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MongoDBをMac Yosemiteにインストール]]></title>
    <link href="http://morizyun.github.io/blog/mongodb-install-setup-mac/"/>
    <updated>2015-03-16T10:00:00+09:00</updated>
    <id>http://morizyun.github.io/blog/mongodb-install-setup-mac</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00ITFOFLS/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00ITFOFLS&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00ITFOFLS&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00ITFOFLS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
MongoDBはドキュメント思考のデータベース(NoSQLの一種)です。
開発の初期段階で、RailsでMongoDB/mongoidを使うとスキーマが固まっていない段階でDBを意識せずに開発が進められます。
うまくユースケースにハマりそうな場合は、ぜひ使ってみてください＾＾</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>MongoDBをインストール手順</h2>

<p>Homebrewのアップデート。</p>

<p>{% codeblock lang:bash %}
brew update
{% endcodeblock %}</p>

<p>mongodbのインストール。</p>

<p>{% codeblock lang:bash %}
brew install mongodb
{% endcodeblock %}</p>

<p>自動起動設定。</p>

<p>{% codeblock lang:bash %}</p>

<h1>起動スクリプトのシンボリックリンク追加</h1>

<p>ln -sfv /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgents</p>

<h1>自動起動をさせたい場合はこちら</h1>

<p>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist</p>

<h1>もし自動起動をしたくない場合に手動で起動する場合はこちら</h1>

<p>mongod --config /usr/local/etc/mongod.conf
{% endcodeblock %}</p>

<p>mongodbの動作確認。</p>

<p>{% codeblock lang:bash %}
mongo</p>

<blockquote><p>MongoDB shell version: 3.0.0
connecting to: test
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
  http://docs.mongodb.org/
Questions? Try the support group
  http://groups.google.com/group/mongodb-user</p>

<p>{% endcodeblock %}</p></blockquote>

<p>dbの切り替え。</p>

<p>{% codeblock lang:bash %}
use mydb</p>

<blockquote><p>switched to db mydb
{% endcodeblock %}</p></blockquote>

<p>データの登録テスト。</p>

<p>{% codeblock lang:bash %}
j = { name : "mongo" };</p>

<blockquote><p>{ "name" : "mongo" }</p></blockquote>

<p>db.things.save(j);
db.things.find();</p>

<blockquote><p>{ "_id" : ObjectId("503ae94fb29f5c1529443919"), "name" : "mongo" }
{% endcodeblock %}</p></blockquote>

<p>シンプル &amp; 便利！</p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>補足</h2>

<p><a href="http://www.cuspy.org/diary/2012-04-17">MongoDBの薄い本(The Little MongoDB Book)</a>は、MongoDBを実際に手を動かして学ぶことができる無料のチュートリアル本です。</p>

<p><a href="http://www.cuspy.org/diary/2012-04-17" title="fpu_tmp_1353921432.4884_59f4bc by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8057/8219449049_f555a10dae.jpg" width="243" height="344" alt="fpu_tmp_1353921432.4884_59f4bc"></a></p>

<p>オススメです！</p>

<h2>Special Thanks</h2>

<p><a href="http://www.mongodb.org/display/DOCSJP/%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB#%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E5%8F%96%E5%BE%97">チュートリアル | mongoDB 公式 日本語</a></p>

<h2>変更来歴</h2>

<p>(2012-11-12 17:00) 新規作成<br/>
(2014-03-16 10:00) Yosemiteでインストール<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Carrierwave/Mongoid/Herokuで作るRails画像アップロード機能]]></title>
    <link href="http://morizyun.github.io/blog/carrierwave-gem-rails-imagemagick-rmagic/"/>
    <updated>2012-11-18T16:00:00+09:00</updated>
    <id>http://morizyun.github.io/blog/carrierwave-gem-rails-imagemagick-rmagic</id>
    <content type="html"><![CDATA[<p>Rails3.29/Heroku/Mongoid環境に画像アップロードの実装するために、「Carrierwave」を利用しました。その一連の流れを忘備録で書いておきます。</p>

<p><a href="http://morizyun.github.io/blog/carrierwave-gem-rails-imagemagick-rmagic" title="fpu_tmp_1353917850.012_128a26 by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8069/8220432490_147ddd3a1d_z.jpg" width="640" height="378" alt="fpu_tmp_1353917850.012_128a26"></a></p>

<p><a href="http://carrierwave-mongolab.herokuapp.com/" class="button big primary">Demo</a>
<a href="https://github.com/morizyun/carrierwave-mongolab" class="button big primary">Source(GitHub)</a></p>

<!-- more -->


<h2>Carrierwaveって何？</h2>

<p>Carrierwaveは、シンプルで柔軟性の高いファイルアップロードアプリです。
Ruby on RailsなどのRackベースのアプリに組み込めます。</p>

<p>競合のGemとしては、「<a href="https://github.com/thoughtbot/paperclip">Paperclip</a>」が挙げられます。現時点ではPaperclipのほうが人気は高いですが、扱いやすくて負けないくらい多機能です。</p>

<h2>Mongoid + ImageMagickのインストール</h2>

<p>もし、MacでMongoDBのインストールがまだの場合は、<strong> <a href="/blog/mongodb-mac-lion">MongodbをHomebrew/Mac Lionでインストール</a>」</strong> を良かったら見てください。</p>

<p>続いて、Carrierwaveを動かすために、ローカルテスト用にImageMagickをインストール(Mac Homebrewの場合)。</p>

<p>{% codeblock コンソール lang:bash %}
brew install imagemagick
{% endcodeblock %}</p>

<h2>Rails プロジェクト作成</h2>

<p>プロジェクトを作成する。今回はmongoidを利用するので、ActiveRecordをスキップ(-Oオプションを付ける)する。</p>

<p>{% codeblock コンソール lang:bash %}
rails new test-app --skip-test-unit -O
{% endcodeblock %}</p>

<p>Gitリポジトリ作成を作成します。</p>

<p>{% codeblock コンソール lang:bash %}
git init
git add -A
git commit -m "create new project"
{% endcodeblock %}</p>

<p>Gemfileファイルに以下のGemを追加</p>

<p>{% codeblock Gemfile lang:ruby %}
ruby '1.9.3'</p>

<h1>Haml</h1>

<p>gem 'haml-rails'</p>

<h1>Mongoid</h1>

<p>gem 'mongoid'
gem 'bson_ext'
gem 'origin'
gem 'moped'
gem 'rmagick', :require => 'RMagick'
gem 'carrierwave'
gem 'carrierwave-mongoid', :require => 'carrierwave/mongoid'
{% endcodeblock %}</p>

<p>Gemfileの設定を反映。</p>

<p>{% codeblock コンソール lang:bash %}
bundle install
{% endcodeblock %}</p>

<h2>mongoDBに接続するための設定を作成</h2>

<p>{% codeblock コンソール lang:bash %}
rails generate mongoid:config
{% endcodeblock %}</p>

<p>config/mongoid.ymlでProductionの設定をします。
こちらは後で使う<a href="/blog/2012-10-16-mongolab-mongodb-mongoid-rails">Heroku アドオンMongoLab</a>用の設定です。</p>

<p>{% codeblock コンソール lang:bash %}
production:
  uri: &lt;%= ENV['MONGOLAB_URI'] %>
{% endcodeblock %}</p>

<h2>Carrierwaveの設定</h2>

<p>application.rbの更新。</p>

<p>{% codeblock config/initializers/carrierwave.rb lang:ruby %}
CarrierWave.configure do |config|
  config.storage = :grid_fs
  config.grid_fs_connection = Mongoid.database
  config.grid_fs_access_url = "/images"
end
{% endcodeblock %}</p>

<h2>アップローダー/Scaffoldの修正</h2>

<p>アップローダーのひな形の生成。</p>

<p>{% codeblock コンソール lang:bash %}
rails g scaffold article title:string
rails g uploader thumbnail
{% endcodeblock %}</p>

<p>モデルファイル「app/model/article.rb」に以下を追加。</p>

<p>{% codeblock app/model/article.rb lang:bash %}
include Mongoid::Timestamps
mount_uploader :thumbnail, ThumbnailUploader
{% endcodeblock %}</p>

<p>アップローダーファイル「app/uploader/thumbnail_uploader.rb」の修正。</p>

<p>{% codeblock app/uploader/thumbnail_uploader.rb lang:bash %}
require "digest/md5"
class ThumbnailUploader &lt; CarrierWave::Uploader::Base
  include CarrierWave::RMagick # コメントを解除</p>

<p>  storage :grid_fs</p>

<p>  def store_dir</p>

<pre><code>"images/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}"
</code></pre>

<p>  end</p>

<p>  version :mini do</p>

<pre><code>process :resize_to_limit =&gt; [200, 200]
</code></pre>

<p>  end
end
{% endcodeblock %}</p>

<p>コントローラファイル「add/controller/articles_controller.rb」の修正。</p>

<p>{% codeblock add/controller/articles_controller.rb lang:ruby %}
class ApplicationController &lt; ActionController::Base
  protect_from_forgery</p>

<p>  def image</p>

<pre><code>gridfs_path = env["PATH_INFO"].gsub("/images/", "")
begin
  gridfs_file = Mongo::GridFileSystem.new(Mongoid.database).open(gridfs_path, 'r')
  self.response_body = gridfs_file.read
  self.content_type = gridfs_file.content_type
rescue
  self.status = :file_not_found
  self.content_type = 'text/plain'
  self.response_body = ''
end
</code></pre>

<p>  end
end
{% endcodeblock %}</p>

<p>Viewファイル「app/views/articles/_form.html.haml」の修正。</p>

<p>{% codeblock app/views/articles/_form.html.haml lang:ruby %}
= image_tag( @article.thumbnail_url ) if @article.thumbnail?
= f.file_field :thumbnail
= f.hidden_field :thumbnail_cache
{% endcodeblock %}</p>

<p>Viewファイル「app/views/pages/show.html.haml」の修正。</p>

<p>vim app/views/pages/show.html.haml
{% codeblock コンソール lang:bash %}
= image_tag( @article.thumbnail_url(:mini))
{% endcodeblock %}</p>

<p>routeファイルを修正。</p>

<p>{% codeblock config/routes.rb lang:ruby %}
root :to => "articles#index"
match "/images/uploads/*path" => "application#image" #thumbnail画像
{% endcodeblock %}</p>

<h2>HerokuにPush</h2>

<p>今回はHerokuとMongoDBのアドオン"MongoLab"を追加します。</p>

<p>{% codeblock コンソール lang:bash %}
git add -A
git commit -m "add scaffold/uploader"
heroku create test-app --stack cedar
{% endcodeblock %}</p>

<p>MongoLabのAddonを追加。</p>

<p>{% codeblock コンソール lang:bash %}
heroku addons:add mongolab:starter
{% endcodeblock %}</p>

<p>結果をブラウザで確認。</p>

<p><a href="http://carrierwave-mongolab.herokuapp.com/"><img src="http://farm9.staticflickr.com/8066/8221470209_1c530565c9_n.jpg" width="320" height="235" alt="fpu_tmp_1353971612.7499_ff3902"></a></p>

<h2>補足</h2>

<p>Mongoidは2.xx系と3.xx系でかなり設定方法が変更されています。
当初3.xx系で組み込みに挑戦しましたが、DBからのimage取得周りでどうしても手詰まりになり、
2.xx系を使った形にしています。技術力＆知識がついたら3.xx系で再チャレンジしたいと思っています！</p>

<h2>Special Thanks</h2>

<p><a href="http://face-do.blogspot.jp/2012/03/herokuimage-uploader.html">herokuで無料のimage uploaderを作る</a></p>

<p><a href="http://d.hatena.ne.jp/mrgoofy33/20110509/1304870457">Rails3での画像アップロードの実装(ImageMagick + Rmagick + file_column)</a></p>

<p><a href="http://d.hatena.ne.jp/hichiriki/20111128">[Rails] file_column から CarrierWave へ (序)</a></p>

<p><a href="https://github.com/jnicklas/carrierwave">jnicklas / carrierwave GitHub</a></p>

<p><a href="https://github.com/jnicklas/carrierwave-mongoid/tree/mongoid-3.0">jnicklas / carrierwave-mongoid GitHub</a></p>

<h2>テスト環境</h2>

<pre>
# OS : Mac Lion(OS X 10.7)
# Rails : 3.2.9
# ImageMagic : 6.7.7-6.lion
# Gem Rmagick : 2.13.1
# Gem carrierwave : 0.6.2
# Gem mongoid : 2.4.12
# Gem carrierwave-mongoid : 0.2.1
</pre>

]]></content>
  </entry>
  
</feed>
