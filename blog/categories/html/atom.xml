<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: HTML | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/html/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-12T23:57:50+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTML/CSS/JavaScript 初歩の初歩]]></title>
    <link href="http://morizyun.github.io/blog/html-css-javascript-biginner/"/>
    <updated>2014-11-09T12:45:00+09:00</updated>
    <id>http://morizyun.github.io/blog/html-css-javascript-biginner</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774163678/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774163678&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774163678&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774163678" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />最近HTML/CSS/JavaScriptなどを初学者の方向けに教える機会がすごく増えきました。初学者の方ができるだけ詰まらずに、効率的に学習するための手順をいろいろな方と相談しながら、書きなおしています。</p>

<p><strong>(11-09 12:45) Progate, atomを追加</strong></p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h1>導入編</h1>

<h2>Webサイトを作ることは楽しい！</h2>

<p><img src="https://farm3.staticflickr.com/2898/14096345151_3ba825553e_z.jpg" width="640" height="361" alt="スクリーンショット 2014-05-04 7.29.51"></p>

<p><strong><a href="http://gigazine.net/news/20130911-180-websites/">プログラミング経験ゼロだが180日で180個のウェブサイトを作るプロジェクトがゴールまであとわずかに</a></strong><br/>
プログラミング経験0のデザイナさんが、毎日1つサイトを作っていったお話です。最初はテキストとリンクが並ぶだけのサイトでしたが、少しずつゲームやチャットなどが作れるようになっていきます。</p>

<p>今知っている知識だけで、作れるWebサイトを作っていく。そして、自分の知っている2つの知識を組み合わせたり、１つやりたいコトのためのパーツをGoogleに教えてもらうくらいが、挫折せずに続けられる方法だと思っています！</p>

<h2>今できることの範囲内で、作りたいWebサイトは？</h2>

<p>今知っている知識、今できることの範囲内でできるWebサイトを考えてみてください。大切なことは最大でも4-5時間あれば十分できてしまう作業量の範囲内にすること。1日を超えてしまうとモチベーションが下がったり、難易度が高すぎて途中で挫折してしまう可能性がありもったいないです。</p>

<h2>おすすめテキストエディタ</h2>

<p><strong><a href="https://atom.io/">Atom</a></strong><br/>
GitHub社がオープンソースで開発しているエディタ、Mac、Windowsに対応していてパッケージのインストールなどが楽ちん。</p>

<p><strong><a href="http://www.sublimetext.com/2">Sublime Text2</a></strong><br/>
多くのプログラマーが好んで使っている、おすすめのテキスト・エディターです。WindowsもMacにも対応しています。ダウンロードして評価する場合は無料です。継続して使う場合はシェアウェアとなります。</p>

<h2>HTML</h2>

<p>HTMLとは、インターネット・エクスプローラ(IE)やクローム(Chrome)などのブラウザにわかりやすい文章のこと。</p>

<p><strong><a href="http://www.tohoho-web.com/wwwbeg3.htm">HTMLの基本テクニック</a></strong><br/>
HTMLの要点中の要点が書かれています。最低限ここを見ておくだけで最低限のHTMLは書けるようになります。</p>

<p><strong><a href="http://dotinstall.com/lessons/basic_html_v2">HTML入門 (全16回) | ドットインストール</a></strong><br/>
HTMLについてわかりやすく解説した動画(約3分)が全16回あります。最初から全部を覚えようとしたり、真似して書く必要はありません。タイトルを見ながら、興味が有るところや作りたいことに関係しそうなところをつまみ食いしてみてください。</p>

<h2>CSS</h2>

<p>HTMLが、ブラウザが解釈しやすい文章。CSSはその文章の飾りや体裁を整えるための言語。</p>

<p><strong><a href="http://sinfonia-wld.com/pc/css.html">初級 CSS 解説｛初心者向けの、ごく簡単な、スタイルシート の使い方の説明です。｝</a></strong><br/>
HTMLとCSSを使う方法が書かれています。もし分かりづらければコメントください！</p>

<p><strong><a href="http://dotinstall.com/lessons/basic_css3">CSS3入門 (全19回) | ドットインストール</a></strong><br/>
CSSについてわかりやすく解説した動画(約3分)が全19回あります。最初からすべてを理解する必要は全然無いです。自分の興味があるタイトルや内容があればちょっと見てみるくらいがオススメです。</p>

<h2>JavaScript</h2>

<p>HTMLが文章構造、CSSがデザイン、Javascriptは主にブラウザ側での「動き」を表現するための言語。</p>

<p><strong><a href="http://liginc.co.jp/programmer/archives/4958">JavaScriptではじめるプログラミング超初心者講座</a></strong><br/>
Javascriptはすごく奥が深いので、まずはここを見てこんなことができるだなってイメージを持ってもらえれば十分です。</p>

<p><strong><a href="http://dotinstall.com/lessons/basic_javascript_v2">JavaScript入門 (全24回) | ドットインストール</a></strong><br/>
JavaScriptについてわかりやすく解説した動画(約3分)が全16回あります。ブラウザの中で動くものを作りたいと思ったら、ちょっと覗いてみてください。自分のやりたことにマッチするタイトルの動画があればちょっと見てみるくらいで十分です。</p>

<h2>プログラムを学ぶことの意義</h2>

<p><strong><a href="http://lrandcom.com/facebook_former_executive_learning_programming_guarantee_life_time_work">Facebook元役員「プログラミングを学ぶのなら、生涯仕事に困らないことを私が保証しよう。」</a></strong><br/>
かなりインパクトの有るタイトルですが、内容はプログラムを学ぶことがどんな未来につながるか、海外では今どんなことが起こっているかを俯瞰的に理解できる素晴らしい記事です！</p>

<hr>


<h1>ここからは参考リンク</h1>

<h2>書きながら覚えるHTML/CSS/Javascript</h2>

<p><strong><a href="http://prog-8.com/">Progate</a></strong><br/>
Hackathon Houseによく来ていた学生さんが中心になって開発をしているサービス。
Webサービスを作り出すことを体系的に学ぶ事ができる。日本人が躓きやすいポイントをしっかりとフォローしてます！</p>

<p><strong><a href="http://codeprep.jp">CODEPREP</a></strong><br/>
オンラインでプログラミングを書きながら覚えることができます。HTML5、CSS、Javascriptを基礎から応用まで勉強できます！</p>

<p><strong><a href="http://www.codecademy.com">Codecademy</a></strong><br/>
日本語と英語がまじってはいますが、CODEPREPと同じく、オンラインでブラウザ上でプログラムを覚える事が出来る仕組みです。</p>

<h2>CSSをより使いこなす</h2>

<p><strong><a href="http://smkn.xsrv.jp/blog/2010/02/css-basic-syntax/">CSS基礎文法最速マスター</a></strong><br/>
CSSの要点が詰まっている。やや中級者向けの内容なので、わからなければ読み飛ばしてください。</p>

<h2>Javascriptをより使いこなす</h2>

<p><strong><a href="http://gifnksm.hatenablog.jp/entry/20100131/1264934942">JavaScript基礎文法最速マスター</a></strong><br/>
中級者向けの内容ですが、知っておくと後からの理解が早まりそうな内容です。ちょっとJavaScriptを触ってから読み直すと、理解が深まるかも。</p>

<h2>Qiitaでアウトプット</h2>

<p><strong><a href="https://qiita.com/">Qiita</a></strong><br/>
僕は未来の自分が困らないようにブログを書いています。そうすることで、次に同じことをやるときに効率的に作業ができるようになりました。またこのアウトプットを続けたことで、ブログ経由でいろいろな出会いを得られたり、転職ができたりしました。</p>

<p>Mac限定ですが、Qiitaは<strong><a href="http://kobito.qiita.com/ja">Kobito</a></strong>というMacアプリがあり、メモを気軽に公開できます。Macな人で自分でブログを始める前の練習でQiitaにアップするのはすごくいい方法だと思います！</p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>お願い事項</h2>

<p>このやり方は賛否両論あると思いますが、僕が個人的に試行錯誤を重ねた経験や沢山の人からアドバイスをもらった結果の仮説です。未完成な仮説をネットにアップすることは申し訳ないと思いつつも、シェアすることでより良くなると信じています。もしもっといい方法があればぜひコメントお願いします！</p>

<h2>Special Thanks</h2>

<p>Sublime Textの料金体系について勘違いしていました。『<strong><a href="https://twitter.com/economixmeister">@economixmeister</a></strong>』さん、ありがとうございます！</p>

<p><strong><a href="http://rajic.2chblog.jp/archives/51811716.html">短期間でプログラミング言語を覚えるのに役に立ちそうなサイトまとめ</a></strong></p>

<p><strong><a href="http://fladdict.net/blog/2014/02/engineering-for-designer.html">デザイナがエンジニアリング（プログラム）を学ぶコツ</a></strong></p>

<h2>変更来歴</h2>

<p>(04/27 16:50) 書きながら覚えるHTML/CSS/Javascriptを追加<br/>
(05-04 07:50) Webサイトを作ることは楽しい！を追加<br/>
(11-09 12:45) Progate, atomを追加<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript 徹底入門のための資料＆書籍まとめ]]></title>
    <link href="http://morizyun.github.io/blog/javascript-learning-tech-yourself_01/"/>
    <updated>2014-03-09T21:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/javascript-learning-tech-yourself_01</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4797372214/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4797372214&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4797372214&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4797372214" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />JavaScriptはブラウザから簡単に使えるし、jQuery Pluginも簡単に追加できるので、つい基礎をおろそかにしたまま使っていて、ちょっと凝った事をしようとした時にいつもハマっていました。ということで今回は、独習JavaScriptの第二版を購入して読み進めつつ、ネットのおすすめのドキュメントを見て、補足しながら勉強していったのでそのメモです。</p>

<p><strong>(03/09 21:50) JavaScriptの習熟度を上げるための勉強フローを追加</strong></p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_square.html %}</p>

<h2>[動画] ドットインストール JavaScript入門</h2>

<p><a href="http://dotinstall.com/lessons/basic_javascript"><img title="JavaScript入門 (全25回) - プログラミングならドットインストール" src="http://capture.heartrails.com/400x300/cool/delay=10/1390111431906?http://dotinstall.com/lessons/basic_javascript" alt="http://dotinstall.com/lessons/basic_javascript" width="400" height="300" /></a></p>

<p>JavaScriptを本当に使ったことがない初学者の方におすすめしたいのがドットインストールの動画。説明が環境構築からスタートしてくれるので、躓くことなく最初の一歩を踏み出すことができます。</p>

<h2>[Web] JavaScript基礎文法最速マスター</h2>

<p><a href="http://gifnksm.hatenablog.jp/entry/20100131/1264934942"><img title="JavaScript基礎文法最速マスター - gifnksmの雑多なメモ" src="http://capture.heartrails.com/400x300/cool/delay=10/1390111349623?http://gifnksm.hatenablog.jp/entry/20100131/1264934942" alt="http://gifnksm.hatenablog.jp/entry/20100131/1264934942" width="400" height="300" /></a></p>

<p>『<strong><a href="http://gifnksm.hatenablog.jp/entry/20100131/1264934942">JavaScript基礎文法最速マスター</a></strong>』はJavaScriptの基礎的な文法を学ぼうと思った時に読んでほしい、まとめ記事です。これだけでJavaScriptで最低限のプログラムを組むことができます。また、Tips集には他言語との違いでつまずきそうなところが丁寧にまとめられているので読んでおくとJSのプログラム中に詰まる確率がかなり減ると思います！</p>

<h3>JavaScriptでクラス的にメソッドを定義</h3>

<p>いろいろ試していて忘れがちなので忘備録。クラスのメソッド的な定義の仕方。まずは連想配列内に定義する方法。</p>

<p>{% codeblock lang:javascript %}
var john = {
  name: "John",
  sayName: function() { console.log(this.name + " Due"); }
};</p>

<p>john.sayName(); //=> John Due
{% endcodeblock %}</p>

<p>次はコンストラクタっぽいオブジェクトを定義して、そのオブジェクトの<code>prototype</code>にメソッドを定義する方法。</p>

<p>{% codeblock lang:javascript %}
// コンストラクタ
var Girl = function(name, age) {
  this.name = name;
  this.age = age;
};
// prototypeにメソッドを定義
Girl.prototype = {
  sayAge: function() { console.log("My age is " + this.age); }
}
// オブジェクトを生成して、sayAgeメソッドを呼び出し
var sadako = new Girl('Sadako', 12);
sadako.sayAge();  //=> My age is 12
{% endcodeblock %}</p>

<h2>[SLIDE] 最強オブジェクト指向言語 JavaScript 再入門</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/23768378" width="597" height="486" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/yuka2py/javascript-23768378" title="最強オブジェクト指向言語 JavaScript 再入門！" target="_blank">最強オブジェクト指向言語 JavaScript 再入門！</a> </strong> from <strong><a href="http://www.slideshare.net/yuka2py" target="_blank">Yuji Nojima</a></strong> </div></p>

<p>今回幾つか資料を探してきた中で、特に勉強になった資料の中の一つがこの『<strong><a href="http://www.slideshare.net/yuka2py/javascript-23768378">最強オブジェクト指向言語 JavaScript 再入門</a></strong>』のスライドです。　</p>

<p>JavaScriptを使っている中で出てくる「<strong>プロトタイプチェーンやスコープチェーン</strong>」といった概念が本当にわかりやすく書かれていて、その後の勉強をかなりスムーズにしてくれました。</p>

<p>一方で、ビジュアル的ではなくって、コードを書いていく中で理解できそうな『<strong>クロージャーthis</strong>』については更に別途資料を見ていくことをおすすめします！</p>

<h2>[Web] JavaScript基本概念最速マスター</h2>

<p><a href="http://d.hatena.ne.jp/kagigotonet/20100202/1265080352"><img title="JavaScript基本概念最速マスター - TechTalkManiacs" src="http://capture.heartrails.com/400x300/cool/delay=10/1390111846101?http://d.hatena.ne.jp/kagigotonet/20100202/1265080352" alt="http://d.hatena.ne.jp/kagigotonet/20100202/1265080352" width="400" height="300" /></a></p>

<p>『<strong><a href="http://gifnksm.hatenablog.jp/entry/20100131/1264934942">JavaScript基礎文法最速マスター</a></strong>』に触発されて作られた記事だそうです。基本的な内容は、先ほどの『<strong><a href="http://foreignkey.jp/wp-content/uploads/2013/07/js-javascript-oop-reintroduction.pdf">最強オブジェクト指向言語 JavaScript 再入門</a></strong>』と近いですが、より綺麗にまとまっているので、PDFを読み進めた上で、もう一度読むと頭の整理になります！</p>

<h2>[Web] Javascriptのコーディング規約について</h2>

<p><a href="http://www.hp-stylelink.com/news/2013/10/20131008.php"><img title="他人にやさしいソースコードの書き方 コーディング規約 JavaScript編 | Web制作会社スタイル" src="http://capture.heartrails.com/400x300/cool/delay=10/1390396041321?http://www.hp-stylelink.com/news/2013/10/20131008.php" alt="http://www.hp-stylelink.com/news/2013/10/20131008.php" width="400" height="300" /></a></p>

<p>Javascriptのコーディング規約、初めて読みました。JSDocも同じく所見でした。とりあえずコメントを書いていくようにしつつ、可読性を上げるためのトライを続けていきます！</p>

<h2>[Web] CoffeeScript基礎文法最速マスター</h2>

<p><a href="http://www.infiniteloop.co.jp/blog/2011/03/coffeescript-master/"><img title="CoffeeScript基礎文法最速マスター | 株式会社インフィニットループ技術ブログ" src="http://capture.heartrails.com/400x300/cool/1391757155903?http://www.infiniteloop.co.jp/blog/2011/03/coffeescript-master/" alt="http://www.infiniteloop.co.jp/blog/2011/03/coffeescript-master/" width="400" height="300" /></a></p>

<p>CoffeeScriptの基礎文法の説明です。CoffeeScriptには基礎的な文法の中にもJavascriptではできない「痒い所に手が届く」的な書き方をフレキシブルに実現することができます！</p>

<h2>[Web記事] CoffeeScript クラスベースのオブジェクト指向基礎</h2>

<p><a href="http://d.hatena.ne.jp/kitokitoki/20120701/p1"><img title="CoffeeScript でクラスベースのオブジェクト指向プログラミングをするための基礎知識 - わからん" src="http://capture.heartrails.com/400x300/cool/1390713861625?http://d.hatena.ne.jp/kitokitoki/20120701/p1" alt="http://d.hatena.ne.jp/kitokitoki/20120701/p1" width="400" height="300" /></a></p>

<p>JavaScriptはプロトタイプベースのオブジェクト指向ですが、CoffeeScriptを使うと、『<strong><a href="http://d.hatena.ne.jp/kitokitoki/20120701/p1">CoffeeScript でクラスベースのオブジェクト指向プログラミングをするための基礎知識 - わからん</a></strong>』を書くことができます。これをわかりやすく説明して頂いている記事です。</p>

<p>ちなみにサンプルとしてはこんなかんじです。</p>

<p>{% codeblock lang:javascript %}
class Dog
  # コンストラクタ
  constructor: (@name) -></p>

<p>  # Public メソッド
  action_public: (verb) -></p>

<pre><code>console.log "#{verb} #{@name} (public)."
</code></pre>

<p>  call_action_private: (verb) -></p>

<pre><code>action_private(verb)
</code></pre>

<p>  # Private メソッド
  action_private = (verb) -></p>

<pre><code>console.log "#{verb} #{@name} (private)."
</code></pre>

<p>  @var1: "a" #=> Dog.var1 = "a";
  @var2= "b" #=> Dog.var2 = "b";
  var3: "c" #=> Dog.prototype.var3 = "c";
  var4= "d" #=> var4 = "d"</p>

<h1>Dogを継承したLabradorクラス</h1>

<p>class Labrador extends Dog
  action: (verb) -></p>

<pre><code>#基底クラスのメンバ呼び出し
alert "#{verb} #{@name}."
</code></pre>

<p>Hana = new Dog "Hana"
Hana.action_public('Running') #=> Running Hana (public).
Hana.action_private('Running') #=> Error no method 'action_private'
Hana.action_action_private('Running') #=> Running (private).</p>

<p>Hana = new Dog "Hana"
console.log Dog.var1 #=> a
console.log Dog.var2 #=> b
console.log Hana.var3 #=> c
console.log Hana.var4 #=> undefined
{% endcodeblock %}</p>

<p>変数の定義などは、まだまだ理解できていないので忘備録のメモ書きです！</p>

<h2>[書籍] 独習 JavaScript 第2版</h2>

<p><a href="http://www.amazon.co.jp/gp/product/4798130842/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4798130842&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4798130842&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4798130842" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />『<strong>独習</strong>』と名前がつくだけあって、JavaScriptを一からAll in Oneで一冊で学ぶのには最適な本です。一方で、書き方が若干教科書的なので、好きな人と嫌いな人が少し別れてしまいそうです。僕は途中でわからなかったり、飽きそうになったらネット資料で補足しながら読み進めています。</p>

<p>ちなみによくネットで探してしまうURIエンコードのメソッドがあったので念のためメモ。</p>

<pre>
encodeURI() #=> URIで特殊な文字列(:, ;, /とか)はエンコードしない
encodeURIComponent() #=> URIで特殊な意味を持つ文字(;, :, /とか)も含めてエンコードする
</pre>


<h2>[書籍] jQuery 最高の教科書</h2>

<p><a href="http://www.amazon.co.jp/gp/product/4797372214/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4797372214&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4797372214&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4797372214" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />『<strong><a href="http://www.amazon.co.jp/gp/product/4797372214/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4797372214&amp;linkCode=as2&amp;tag=morizyun00-22">jQuery 最高の教科書</a></strong>』も読み始めました。この本はjQueryの基礎や、Tips、サンプルを使ったチュートリアルなどが数多く乗っています。「例題付きの読みやすい教科書」という印象でサクサク読み進めることができています！</p>

<br style="clear:both;"/>


<p>幾つか備忘録のTipsです。</p>

<p>{% codeblock lang:javascript %}
// 複数プロパティの変更
$('#type').css({</p>

<pre><code>'fontsize' : '50px',
'background-color' : '#ae5e9b',
'color' : 'ebc000'
</code></pre>

<p>})</p>

<p>// メソッドチェーン
$('#type')</p>

<pre><code>.on('mouseover', function(){
    # hogehoge...
})
.on('mouseout', function(){
    # fugafuga...
})
</code></pre>

<p>{% endcodeblock %}</p>

<h2>JavaScriptの習熟度を上げるための勉強フロー</h2>

<p><strong><a href="https://speakerdeck.com/tacamy/js-girls-tokyo-number-1">はじめてのJavaScript / JS Girls Tokyo #1</a></strong><br/></p>

<pre>
1) 書籍などでJavascriptの基礎知識を深める => ブログ書く
2) jQuery Pluginを作る => ブログ書く
3) Node.jSを使ったWebサービスを構築する => ブログ書く
</pre>


<p>ブログを使って知識を整理したり、教えてもらったりするのはとってもいい方法だと思う！</p>

<h2>[Web] CoffeeScriptのリファレンス</h2>

<p><a href="http://coffeescript.org/"><img title="CoffeeScript" src="http://capture.heartrails.com/400x300/cool?http://coffeescript.org/" alt="http://coffeescript.org/" width="400" height="300" /></a></p>

<p>CoffeeScriptの本家サイトで、かなりリファレンスが充実しています。CoffeeScriptのコーディングを開始する前に一度精読しておくのはかなりありだと思います！</p>

<h2>[Web] CoffeeScriptの入門記事</h2>

<p>実際JavaScriptで色々書いているとCoffeeScriptの理解も少しずつ深まってきました。でこれから再度読みなおす予定の資料も合わせて追記。</p>

<p><strong><a href="http://qiita.com/GRUGA7348/items/b45e316fced8aec9a97e">CoffeeScript入門 - Qiita [キータ]</a></strong></p>

<h2>あとがき</h2>

<p>ネットでおすすめのサイト・資料があればぜひ教えて下さい。また、書籍は他にもJavaScript系の本を２冊購入しています。読み進んでいったら、紹介していきます。</p>

<p>{% include custom/google_ads_square.html %}</p>

<h2>変更来歴</h2>

<p>(01/18 15:40) 新規作成<br/>
(01/18 18:55) CoffeeScript系を中心にコードを追記<br/>
(01/22 22:00) JavaScriptのコーディング規約についてを追記<br/>
(01/25 16:30) Chrome Developer ToolsやjQuery 最高の教科書の書評を追記<br/>
(02/05 20:50) Typoの修正<br/>
(02/07 16:30) いろいろ読み直して、構成を変更<br/>
(03/09 21:50) JavaScriptの習熟度を上げるための勉強フローを追加<br/></p>
]]></content>
  </entry>
  
</feed>
