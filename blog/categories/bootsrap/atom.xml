<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bootsrap | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/bootsrap/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2015-07-05T18:40:53+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bootsrapで画面幅によってCSSの一部だけを切り替える[LESS][Twitter]]]></title>
    <link href="http://morizyun.github.io/blog/less-change-responsive-twitter-bootsrap/"/>
    <updated>2012-12-16T12:35:00+09:00</updated>
    <id>http://morizyun.github.io/blog/less-change-responsive-twitter-bootsrap</id>
    <content type="html"><![CDATA[<p><a href="{{ root_url }}{{ page.url }}" title="by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8069/8250062954_f9859c52e8_m.jpg" width="200" alt="Eye Catch Image" style="float: left; margin: 0 20px 20px 0;"></a></p>

<p>Twitter BootsrapをLESSで使われている方限定ですが、CSSの中の一部だけを切り替える方法を紹介します。例えばスマホの時だけ画像の横の空白(margin, paddingとか)を変更したい時などに使えます。</p>

<!-- more -->


<br style="clear:both;"/>


<h2>CSSの切り替え方</h2>

<p>LESSを使って画面幅を切り替える方法です。まず、HTML側の修正。</p>

<p>{% codeblock HTML lang:html %}
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="assets/css/bootstrap-responsive.css" rel="stylesheet">
{% endcodeblock %}</p>

<p>ちなみにHAMLの場合はこちら。(HAMLの方以外は無視してください)</p>

<p>{% codeblock HAML lang:haml %}
%meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}
%link{:href => "assets/css/bootstrap-responsive.css", :rel => "stylesheet"}
{% endcodeblock %}</p>

<p>続いてLESS側の書き方は次の通り。</p>

<p>{% codeblock CSS lang:css %}
/<em> スマホ以外を対象 </em>/
@media (min-width: 481px) {
  .thumbnail_box {</p>

<pre><code>padding: 8px;
margin: 0 10px 18px 10px;
</code></pre>

<p>  }
}</p>

<p>/<em> スマホ対象 </em>/
@media (max-width: 480px) {
  .thumbnail_box {</p>

<pre><code>padding: 4px;
margin: 4px;
</code></pre>

<p>  }
}
{% endcodeblock %}</p>

<p>結果はこちら、まずスマホ以外の場合です。</p>

<p><img src="http://farm9.staticflickr.com/8350/8276834726_aa14ae251b_c.jpg" width="600" height="800" alt="写真"></p>

<p>次にiPhoneの場合。iPhoneの場合だけ横の空白が狭くなっています。</p>

<p><img src="http://farm9.staticflickr.com/8213/8275769955_4f02d4c32f.jpg" width="333" height="500" alt="fpu_tmp_1355628898.0756_ea491f"></p>

<p>もちろんこの応用で、タブレットの場合を増やすこともできます。
詳しくは<a href="http://twitter.github.com/bootstrap/scaffolding.html#responsive">Twitter/Bootstrapの公式の説明を御覧ください</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3.2.9/Bootstrap/Bootswatchで「どうぶつの森 QRコードまとめ」作ってみた！]]></title>
    <link href="http://morizyun.github.io/blog/doubutsu-qr-matome-release/"/>
    <updated>2012-12-07T00:20:00+09:00</updated>
    <id>http://morizyun.github.io/blog/doubutsu-qr-matome-release</id>
    <content type="html"><![CDATA[<p>{% include custom/google_ads_text.html %}
<a href="http://doubutsu.qr-matome.info/" title="by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8198/8249134787_edd7bab851.jpg" width="200" alt="Eye Catch Image" style="float: left; margin: 0 20px 20px 0;"></a></p>

<p>2012年11月最高に輝いてたテック記事「<a href="http://d.hatena.ne.jp/inouetakuya/20121117/1353145846">Rails3、Twitter Bootstrap、Bootswatch を使ったレスポンシブなエロサイト「babyshark」をリリースしました</a>」を見て泪流したので、Railsで「<a href="http://doubutsu.qr-matome.info/">どうぶつの森 QRコードまとめ</a>」を作ってみました。
ということで今回やったことまとめと反省、今後の目標です。</p>

<p><a href="http://doubutsu.qr-matome.info/" class="button big primary">どうぶつの森 QR コードまとめ</a></p>

<!-- more -->


<br style="clear:both;"/>


<h2>目次</h2>

<p>(1) <a href="#1">今回使った技術まとめ</a><br/>
(2) <a href="#2">開始時の目標と現時点の自己採点</a><br/>
(3) <a href="#3">今後の目標</a></p>

<p><a name="1"></a></p>

<h2>(1)今回使った技術まとめ</h2>

<p>今回使った技術はほとんどをブログの記事にしています。以下の記事が今回使った技術です。</p>

<h4>環境構築編</h4>

<ul>
<li><a href="/blog/ssh-key-bitbucket-github">SSH認証キーをBitbucket/GitHubに設定</a></li>
<li><a href="/blog/pow-guard-rails">開発サーバーにPowを導入</a></li>
<li><a href="/blog/guard-spork-rspec-tdd">RSpecによるTDD環境の構築</a></li>
</ul>


<h4>開発Rails編</h4>

<ul>
<li><a href="/blog/rails-mysql-bootstrap">Rails 3.2.9/Bootstrap/Haml プロジェクト新規作成</a></li>
<li><a href="/blog/yard-rails-ruby-gem-document-html">Rails/Rubyドキュメント作成 Gem YARDを導入</a></li>
<li><a href="/blog/kaminari-gem-paginator-rails">RailsのページネーションGem kaminariを導入</a></li>
<li><a href="/blog/meta-tags-sitemap-generator-rails-seo">Rails メタタグとサイトマップ生成Gemを導入</a></li>
<li><a href="/blog/capistrano-git-rails-deploy">Git連携Capistranoによる自動デプロイの導入</a></li>
</ul>


<h4>開発テスト編</h4>

<ul>
<li><a href="/blog/rspec-ruby-rails">RSpecの基礎の基礎</a></li>
<li><a href="/blog/rspec-builtin-matcher-rails">RSpecの標準matchers(マッチャー)の一覧を作成</a></li>
<li><a href="/blog/rake-task-rails-rspec-test">Rails Rakeタスク作成からRSpecテストまで</a></li>
<li><a href="/blog/rails-lib-rspec-test">Rails 3.2のlibフォルダをRspecでテスト</a></li>
</ul>


<h4>開発デザイン編</h4>

<ul>
<li><a href="/blog/bootswatch-rails-setup">RailsにBootsrap/BootswatchのテーマCosmoを導入</a></li>
<li><a href="/blog/jquery-vgrid-js-rails">可変グリッドレイアウトjQuery - jquery.vgrid.jsを導入</a></li>
<li><a href="/blog/hatena-facebook-twitter-octopress">はてブ/Twitter/いいねなどソーシャルボタンをキレイに並べる</a></li>
</ul>


<p><a name="2"></a></p>

<h2>(2)開始時の目標と現時点の自己採点</h2>

<h4>(i) Railsのベーシックなスキルの習得</h4>

<p>前述の「<a href="http://d.hatena.ne.jp/inouetakuya/20121117/1353145846">Rails3、Twitter Bootstrap、Bootswatch を使ったレスポンシブなエロサイト「babyshark」をリリースしました</a>」に載っていた手法などをできる限りトレースして、少しでもスキルを上げること
が今回の第一の目標でした。この点の自己採点は表面的な技術に触れることはできましたが、むしろ「自分が何も知らないという事実」を知れたことこそが収穫だと思っています。</p>

<h4>(ii) ブログでのアウトプット</h4>

<p>今回のサイトでは、学んだこと/調べたことをできる限りブログにアウトプットをするようにしました。人に説明するプロセスを挟むことで今まで「なんとなくできた」ことが、「少し理解できた」にレベルアップできたと思っています。また、コーディング前/ブログを書くの前に公式のリファレンスを読むクセがついたのは収穫でした。</p>

<p><a name="3"></a></p>

<h2>(3) 今後の目標</h2>

<h4>(i) 「どうぶつの森 QR コードまとめ」としての目標</h4>

<p>一人でも多くの「どうぶつの森 ユーザー」に満足してもらえるようなサイトを作る。
これが最大の目標です。直近のTODOは次の通りです。</p>

<pre>
* 画像表示速度の改善
* Twitpicしか対応できていないので、twitter.yfrog/twippleにも対応
* タグ付け
* 検索機能
* 新着画像を目立たせる
* 英語化
* Twitterボットで新着QRコードをつぶやく
</pre>


<h4>(ii) 技術的な目標</h4>

<p>技術的な目標としては以下を考えています。</p>

<pre>
* PVの向上と離脱率低下の施策を少しでも身につける
* テスト駆動開発プロセスを最低限こなせるようになる
* Rubyライブラリの理解
* プログラミングの前段階でのコード設計力を身につける
* サーバ監視の導入等、サーバサイドをしっかり学ぶ
</pre>


<p>以上です。これからも「<a href="http://doubutsu.qr-matome.info/">どうぶつの森 QRコードまとめ</a>」を開発・運営して行く中で得られた経験を積極的にこのブログにフィードバックしていきます。初心者ブログと初心者サイトでお見苦しい点ばかりだと思いますが、今後共ご指導ご鞭撻のほどよろしくお願いします！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootsrapでモーダル表示 HTML/HAMLテンプレート]]></title>
    <link href="http://morizyun.github.io/blog/twitter-bootsrap-modal/"/>
    <updated>2012-12-06T22:55:00+09:00</updated>
    <id>http://morizyun.github.io/blog/twitter-bootsrap-modal</id>
    <content type="html"><![CDATA[<p><a href="{{ root_url }}{{ page.url }}" title="by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8069/8250062954_f9859c52e8_m.jpg" width="200" alt="Eye Catch Image" style="float: left; margin: 0 20px 20px 0;"></a></p>

<p>Twitter Bootsrapでモーダル表示 HTML/HAMLテンプレートを作ってみました。
もしTwitterブートストラップでモーダルを作る際には、試してみて下さい！</p>

<!-- more -->


<br style="clear:both;"/>


<h2>HTML/HAML テンプレート</h2>

<p>Bootsrap モーダルのHTMLのテンプレート。</p>

<p>{% codeblock HTML lang:html %}</p>

<!-- モーダル呼び出し側 -->


<p><a class="btn" data-toggle="modal" href="#show_modal" role="button"></p>

<pre><code>モーダル呼び出しボタン
</code></pre>

<p></a></p>

<!-- モーダル内容 -->


<div id="show_modal" class ="modal hide fade" aria-hidden="true" aria-labelledby="modal_label" role="dialog" style="display: none; " tabindex="-1">
  <div class="modal-header">
    <button class="close" aria-hidden="true" data-dismiss="modal" type="button">×</button>
    <h3 id="modal_label">モーダル画面のタイトル</h3>
  <div class="modal-body">
    <h4>テーマ</h4>
    <p>メッセージ</p>
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal">Close</button>
    <button class="btn btn-primary">Change</button>
  </div>
  </div>
</div>


<p>{% endcodeblock %}</p>

<p>Bootsrap モーダルのHAMLのテンプレート。</p>

<p>{% codeblock HAML lang:haml %}
-# モーダル呼び出し側
%a.btn{"data-toggle" => "modal", :href => "#show_modal", :role => "button"} モーダル呼び出しボタン</p>

<p>-# モーダル内容</p>

<h1>show_modal.modal.hide.fade{"aria-hidden" => "true", "aria-labelledby" => "modal_label", :role => "dialog", :style => "display: none; ", :tabindex => "-1"}</h1>

<p>  .modal-header</p>

<pre><code>%button.close{"aria-hidden" =&gt; "true", "data-dismiss" =&gt; "modal", :type =&gt; "button"} ×
%h3#modal_label モーダル画面のタイトル
</code></pre>

<p>  .modal-body</p>

<pre><code>%h4 テーマ
%p メッセージ
</code></pre>

<p>  .modal-footer</p>

<pre><code>%button.btn{"data-dismiss" =&gt; "modal"} Close
%button.btn.btn-primary Change
</code></pre>

<p>{% endcodeblock %}</p>

<p>下は、Bootsrap/Bootswatch/Cosmoでのモーダルのサンプルです。</p>

<p><img src="http://farm9.staticflickr.com/8204/8249002573_e6f61129c8.jpg" width="500" height="219" alt="fpu_tmp_1354801932.2845_6c09fa"></p>

<h2>おまけ：Bootsrapでレスポンシブ</h2>

<p>Twitter Bootsrapでレスポンシブのデザインにするときについつい忘れてしまうのでメモ。</p>

<h3>HTMLのヘッダに次のコードを入れる</h3>

<p>{% codeblock コンソール lang:bash %}
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="assets/css/bootstrap-responsive.css" rel="stylesheet">
{% endcodeblock %}</p>

<p>これで小1時間無駄にした〜〜orz</p>
]]></content>
  </entry>
  
</feed>
