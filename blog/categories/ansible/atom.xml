<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ansible | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/ansible/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2015-12-30T20:26:52+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[さくらVPS&AWS&VULTR EC2/CentOS 6.5へのRailsサーバ構築手順！[Ruby]]]></title>
    <link href="http://morizyun.github.io/blog/centos63-sakura-vps-rails-setup-guide/"/>
    <updated>2015-03-16T10:10:00+09:00</updated>
    <id>http://morizyun.github.io/blog/centos63-sakura-vps-rails-setup-guide</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4798038164/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4798038164&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4798038164&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4798038164" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
さくらVPS/AWS EC2/VULTRのCentOS 6.5にRailsサーバを構築するための手順をまとめました。
Railsの簡単なサーバーの構築から、各種ミドルウェアの導入まで少しずつ充実してきたかなと思います。
用途に応じて、ぜひご活用ください。また、もしこういうミドルウェアの導入方法がわからないといった
事があれば、お気軽にコメントをください！</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>最近のサーバのお気に入り</h2>

<p>最近VULTRのサーバが気に入っています。VULTRのメリットはこちら</p>

<pre>
* SSDベースのサーバを時間単位の課金体制(初回費用や解約月のタイミングなど気にしなくていい)
* メモリ768MBで$5/月
* 性能もEC2等と比べてもいい
</pre>


<p>ということでもし試して見たい方は拙著『<strong><a href="/blog/VULTR-server-ssd-vps-easy-to-use/">VULTR 日本リージョン/MEM 768MB/SSD 15GB VPS $5/月を借りてみた！</a></strong>』を読んでみてください＾＾</p>

<h2>(A) AnsibleやVagrantを使ったサーバ構築</h2>

<p>Ansibleはすごく簡単にサーバ構築手順をコード化できるツールです。
めちゃくちゃ便利なので、ぜひ使って見てください。</p>

<h3>(A-1) <strong><a href="/blog/ansible-rails-rvm-nginx-mysql-postgresql-centos">AWS/VULTR + AnsibleでベーシックなRailsサーバを簡単構築</a></strong></h3>

<h3>(A-2) <strong><a href="/blog/vagrant-ansible-rails-rvm-nginx-mysql/">Vagrant/AWS + AnsibleでCentOS/Nginx/MySQL/RVM/Ruby2.1.2環境を構築</a></strong></h3>

<h2>(B)これだけは導入したい</h2>

<h3>(B-1) <a href="/blog/sakura-vps-centos63-ssh-setup">初期状態から鍵認証SSHでの接続まで</a></h3>

<p>初期状態からSSHで接続できるようにするまでです。</p>

<h3>(B-2) <a href="/blog/iptable-sakura-vps-centos63">iptableの設定</a></h3>

<p>iptables(通信ポートを制限できるファイヤーウオール用のパッケージ)の設定です。</p>

<h3>(B-3) <a href="/blog/logwatch-sakura-vps-centos63">logwatchの導入</a></h3>

<p>logwatchはログを整形してメールで1日一回送ってくれるパッケージの設定です。</p>

<h3>(B-4) <a href="/blog/stop-noneed-service-sakura-vps-centos63">ipv6の停止/日本語化/denyhostsの導入</a></h3>

<p>ipv6の停止/日本語化/denyhosts導入についての手順です。</p>

<h3>(B-5) <a href="/blog/nginx-setup-sakura-vps-centos">Nginxの導入</a></h3>

<p>Webサーバ Nginxの導入手順です。</p>

<h3>(B-6) <a href="/blog/passenger-install-apache-ruby-rails">Passengerの導入</a></h3>

<p>ApacheでRailsを使えるようにするためのパッケージの導入手順です。</p>

<h3>(B-7) <a href="/blog/postgresql-mac-centos-rails/">PostgreSQL 9.3の導入</a></h3>

<p>MySQLと並ぶオープンソースのRDBMであるPostgreSQLの導入手順です。海外のRailsプロジェクトではMySQLよりもPostgreSQLのほうが人気があるっぽいです。Herokuを使う方にはおすすめです。</p>

<h3>(B-8) <a href="/blog/rvm-install-centos-ruby-rails">Ruby 2.0.0/RVMの導入</a></h3>

<p>RVM(Ruby Version Management)とRuby 1.9.3の導入手順です。</p>

<h2>(C) 必要に応じて</h2>

<h3>(C-1) <a href="/blog/mysql-setup-sakura-vps-centos63">MySQL 5.5の導入</a></h3>

<p>データベース MySQLの導入手順です。</p>

<h3>(C-2) <a href="/blog/postfix-centos-sakura-vps-aws/">メールサーバ Postfix/Dovecotの導入</a></h3>

<p>メールサーバのPostfix/Devocotの導入手順です。これは、Railsサーバには直接不要ですが、メールを使ったサービスを作る場合に使えると思います。</p>

<h3>(C-3) <a href="/blog/gem-dalli-memcache/">高性能な分散メモリキャッシュサーバ memcached</a></h3>

<p>データベースへの問い合わせ結果を一時的にキャッシュすることで，データベースへのアクセス回数を減らし，動的なウェブアプリケーションの高速化やスケーラビリティの向上のために利用されているツールです。次のRedisと同じく、高速化の手伝いをしてくれます。</p>

<h3>(C-4) <a href="/blog/redis-mac-centos-rails/">永続化対応のインメモリDB Redisの導入</a></h3>

<p>memcachedライクなKey-Value方式と、永続化対応のインメモリDB『Redis』の導入手順です。こちらも必須のツールではないですが、高速化の際に活用出来ますよ！</p>

<h3>(C-5) <a href="/blog/apache-setup-sakura-vps-centos63">Apacheの導入</a></h3>

<p>Webサーバ Apacheの導入手順です。</p>

<h2>(D) AWS編</h2>

<h3>(D-1) <a href="/blog/elastic-block-store-aws-amazon-strage/">Elastic Block Store(EBS)をAWSのEC2にヒモ付</a></h3>

<p>AWSのElastic Block Store(EBS)の設定手順です。</p>

<h2>(E) Ubuntu編</h2>

<h3>(E-1) <a href="/blog/linux-swap-memory-space/">Ubuntuサーバのスワップ領域の割り当て</a></h3>

<p>Ubuntuでスワップ領域を割り当てるための手順です。題名のCentOSから離れていますが(笑)</p>

<h2>(F)番外編</h2>

<h3>(F-1) <a href="/blog/VULTR-server-ssd-vps-easy-to-use/">VULTR 日本リージョン/MEM 768MB/SSD 15GB VPS $5/月を借りてみた！</a></h3>

<p>日本リージョン/MEM 768MB/SSD 15GBが時間単位で借りれて、月間でもわずか$5。初期費用がいらなかったり、初回デポジット2倍キャンペーンをやっていたりとおすすめです！</p>

<h3>(F-2) <a href="/blog/aws-epel-active-denyhosts/">AWS EC2のAmazon Linux AMIでRailsサーバを立ち上げる際の違い</a></h3>

<p>AmazonのAWSを使ってRailsサーバを立ち上げる際の手順です。基本は(1)-(8)でいけるのですが、若干違いがあったのでその部分のメモです。</p>

<h3>(F-3) <a href="/blog/paas-vps-aws-compare">導入の前に/コストパフォーマンスに優れたRailsサーバの紹介</a></h3>

<p>2012年はRailsサーバの選択肢がより多くなった1年です。そこで個人が使うのにコストパフォーマンスが最適なサービスを幾つかチョイスしてみました！</p>

<h3>(F-4) <a href="/blog/yslow-speed-up-rails-server-centos">Webサイトの速度改善を提案してくれるブラウザアドオン「YSlow」</a></h3>

<p>アプリのレスポンス向上を目指すのに最適なアドオンの紹介です。</p>

<h2>変更来歴</h2>

<p>(13/01/27 22:00) 「(9) AWS EC2のAmazon Linux AMIでRailsサーバを立ち上げる際の違い」を追加<br/>
(13/01/30 16:45) 「(9) メールサーバ Postfix/Dovecotの導入」を追加<br/>
(13/03/01 16:45) memcachedとRedisの導入手順を追加<br/>
(13/03/02 13:15) Postgresの導入手順を追加<br/>
(13/09/24 07:55) Ruby2.0.0対応 &amp; CentOS 6.4対応、記述ミス修正<br/>
(14/04/23 20:00) AWS - CentOS 6.5、Nginx環境の構築手順を追記<br/>
(14/04/29 08:00) Ubuntuサーバのスワップ領域の割り当てを追加<br/>
(14/05/02 08:55) Elastic Block Store(EBS)をAWSのEC2にヒモ付<br/>
(14/08/04 19:25) VULTRの説明や、Ansibleの解説記事を追加<br/>
(2015-03-16 10:10) Ansibleの解説記事を追加<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS/VULTR + AnsibleでベーシックなRailsサーバを簡単構築]]></title>
    <link href="http://morizyun.github.io/blog/ansible-rails-rvm-nginx-mysql-postgresql-centos/"/>
    <updated>2014-11-02T17:10:00+09:00</updated>
    <id>http://morizyun.github.io/blog/ansible-rails-rvm-nginx-mysql-postgresql-centos</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00JWM4W2E/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00JWM4W2E&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00JWM4W2E&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00JWM4W2E" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
Ansibleはサーバー構築時の手順をコードにできるOSSです。今回は最近構築した自分のサーバのコード『<strong><a href="https://github.com/morizyun/centos_ansible_rails">morizyun/centos_ansible_rails - GitHub</a></strong>』を紹介します。</p>

<p>このAnsibleを使うとCentOSを使っているサーバーに以下のような環境をたったの数コマンドで構築できます。</p>

<pre>
* サーバ: Nginx
* DB: MySQL or PostgreSQL
* Firewall: iptables
* サーバ監視: NewRelic
* Ruby: RVM & Rails
* SSH: Mosh
* 開発に必要なライブラリのインストール
</pre>




<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>動作条件</h2>

<p>AWSやVULTRで動作確認がなんとなく出来ている状況ですが、多分CentOS系のOSなら動く気がします。</p>

<p>VULTRの場合は拙著『<strong>[VULTR 日本リージョン/MEM 768MB/SSD 15GB VPS $5/月！ Rails鯖のためのAnsibleコードあり]
(/blog/VULTR-server-ssd-vps-easy-to-use/)</strong>』
を使うと捗ると思います！</p>

<h2>AnsibleをMacに導入</h2>

<p>MacでAnsibleを使えるようにする最低限のコマンド。</p>

<p>{% codeblock lang:bash %}</p>

<h1>Pythonのインストール</h1>

<p>brew install python</p>

<h1>pipのインストール</h1>

<p>sudo easy_install pip</p>

<h1>Ansibleのインストール</h1>

<p>sudo pip install ansible
{% endcodeblock %}</p>

<p>もう少しPythonの開発環境をしっかり構築したい場合は、拙著『<strong><a href="http://morizyun.github.io/blog/python-pyenv-rehash-mac-development/">Python開発環境構築 徹底解説[pyenv, Mavericks]</a></strong>』を良かったらご覧ください！</p>

<h2>Ansibleの実行手順</h2>

<p>まずは『<strong><a href="https://github.com/morizyun/centos_ansible_rails">morizyun/centos_ansible_rails - GitHub</a></strong>』
のコードを入手。</p>

<p>{% codeblock lang:bash %}
git clone https://github.com/morizyun/centos_ansible_rails.git
cd vagrant-ansible-rails
{% endcodeblock %}</p>

<p><code>hosts_production</code>にIP、URSER名、SSH鍵のパスを設定する。</p>

<p>{% codeblock lang:bash %}
vi hosts_production
{% endcodeblock %}</p>

<p>以下のような内容を追記。<br/></p>

<p>{% codeblock lang:bash %}
[web]
IP_ADDRESS ansible_ssh_user=USER_NAME ansible_connection=ssh ansible_ssh_private_key_file=~/ssh/path/to</p>

<h1>IP_ADDRESS => サーバのIP</h1>

<h1>USER_NAME => SSHでログインするユーザー</h1>

<h1>/ssh/path/to => SSH鍵のパス</h1>

<p>{% endcodeblock %}</p>

<p>また、<code>playbook_production.yml</code>の設定を変更。</p>

<p>{% codeblock lang:bash %}
vars: パラメータなど
roles: 構築したい設定。postgresql => mysqlにするとmysqlがインストールされます
{% endcodeblock %}</p>

<p>設定画完了したら、以下のコマンドを実行してhostsを読み込み。</p>

<p>{% codeblock lang:bash %}
export ANSIBLE_HOSTS=./hosts_production
{% endcodeblock %}</p>

<p>ついに実際にAnsibleのコードを実行。sshのログインユーザーのsudoパスによって2種類あります。</p>

<p>(A) sshでログインするユーザーがsudoになる時にパスワードが必要ない場合は、以下のコマンドを実行。</p>

<p>{% codeblock lang:bash %}
ansible-playbook ./playbook_production.yml
{% endcodeblock %}</p>

<p>(B) sshでログインするユーザーがsudoになる時にパスワードが必要な場合は、以下のコマンドを実行。
実行すると最初にsudoのパスワードを聞かれるので入力。</p>

<p>{% codeblock lang:bash %}
ansible-playbook ./playbook_production.yml -K
{% endcodeblock %}</p>

<h2>お願い</h2>

<p>今回公開したコードは、力技で逃げているだけの部分も多いのでお気づきの点があればPRよろしくお願いします！</p>

<p><strong><a href="https://github.com/morizyun/centos_ansible_rails">morizyun/centos_ansible_rails - GitHub</a></strong></p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant/AWS + AnsibleでCentOS/Nginx/MySQL/RVM/Ruby2.1.2環境を構築]]></title>
    <link href="http://morizyun.github.io/blog/vagrant-ansible-rails-rvm-nginx-mysql/"/>
    <updated>2014-07-31T12:00:00+09:00</updated>
    <id>http://morizyun.github.io/blog/vagrant-ansible-rails-rvm-nginx-mysql</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00JWM4W2E/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00JWM4W2E&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00JWM4W2E&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00JWM4W2E" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
久々にVagrantでRails鯖を構築する必要があったので、勉強がてらAnsibleで作ってみました。Chefに比べるとシンプルで学習コストが低いのが素敵です。
でもChefにせよ、Ansibleにせよ、ハマリポイントがしっかり用意されていて、ちょっと手こずりました。もうちょっとフレキシブルに書けるようになりたい！</p>

<p>7/31 11:50 AWSのAmazon LinuxでもAnsibleの動作確認をしました。Ansibleの良さを実感中！</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>バックエンドの選択</h2>

<p>バックエンドはVagrantかAWSのどちらかを使えます。
(検証しているのがAWSのAmazon Linuxだけという意味です。実際は、CentOS系ならある程度使えると思うっす)</p>

<h3>(A) Vagrantを使う場合</h3>

<h4>Vagrantのインストール</h4>

<p><strong><a href="http://www.vagrantup.com/">Vagrant 公式サイト</a></strong><br/>
パッケージをDLしてインストール。</p>

<h4>VirtualBox</h4>

<p><strong><a href="https://www.virtualbox.org/">VirtualBox 公式サイト</a></strong><br/>
パッケージをDLしてインストール。</p>

<h3>(B) AWSを使う場合</h3>

<p>AWSでAmazon Linuxを使う場合はAWSのコンソールから、インスタンスを起動。
(CentOS系の鯖なら同様の方法でやれます)</p>

<h2>Ansibleの導入</h2>

<p>MacでAnsibleを使えるようにする最低限のコマンド。</p>

<p>{% codeblock lang:bash %}</p>

<h1>Pythonのインストール</h1>

<p>brew install python</p>

<h1>pipのインストール</h1>

<p>sudo easy_install pip</p>

<h1>Ansibleのインストール</h1>

<p>sudo pip install ansible
{% endcodeblock %}</p>

<p>もう少しPythonの開発環境をしっかり構築したい場合は、拙著『<strong><a href="http://morizyun.github.io/blog/python-pyenv-rehash-mac-development/">Python開発環境構築 徹底解説[pyenv, Mavericks]</a></strong>』を良かったらご覧ください！</p>

<h2>Ansibleの実行部分。</h2>

<p>バックエンドに(A) Vagrantを使う場合と、(B) AWSを使う場合の手順です。</p>

<p>まずは共通部分。『<strong><a href="https://github.com/morizyun/vagrant-ansible-rails">morizyun/vagrant-ansible-rails - GitHub</a></strong>』のコードを入手して、Vagrantでサーバを起動。
起動したサーバにAnsibleを実行するまでの一連の手順です。</p>

<p>{% codeblock lang:bash %}
git clone https://github.com/morizyun/vagrant-ansible-rails</p>

<p>cd vagrant-ansible-rails
{% endcodeblock %}</p>

<h2>(A) Vagrantの起動、Ansibleの実行</h2>

<p>{% codeblock lang:bash %}
chmod a+x set_vagrant.sh &amp;&amp; ./set_vagrant.sh</p>

<p>export ANSIBLE_HOSTS=./ansible/hosts_vagrant</p>

<p>ansible-playbook ./ansible/playbook_vagrant.yml
{% endcodeblock %}</p>

<h2>(B) AWS + Ansibleの実行。</h2>

<p><code>ansible/hosts_vagrant</code>を参考にしつつ、<code>hosts_production</code>を作成して、AWSのIPとSSHキー(pem)のパスを設定。
設定画完了したら、以下のコマンドを実行。</p>

<p>{% codeblock lang:bash %}
export ANSIBLE_HOSTS=./ansible/hosts_production</p>

<p>ansible-playbook ./ansible/playbook_production.yml
{% endcodeblock %}</p>

<h2>Railsのサンプルプロジェクトの作成</h2>

<p>{% codeblock lang:bash %}
vagrant ssh
cd /var/rails
rvmsudo gem install rails bundler --no-ri --no-rdoc
rails new sample --database=mysql
cd sample
echo "gem 'therubyracer', platforms: :ruby" >> Gemfile
bundle install
bundle exec rake db:create
rails s
{% endcodeblock %}</p>

<h2>ブラウザでのアクセス</h2>

<p><code>http://192.168.33.10/</code>にブラウザをアクセスすると<code>app/</code>フォルダの中のファイルにアクセスできます。</p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>Vagrant Share</h2>

<p>Vagrant Shareを使うとグローバルなURLを取得する事もできます。</p>

<p>まずは『<strong><a href="https://vagrantcloud.com/">Vagrant Cloud</a></strong>』でユーザー登録。</p>

<p>次に以下のコマンドを実行。</p>

<p>{% codeblock lang:bash %}</p>

<h1>Vagrant Cloudのユーザー名/パスワードを入力</h1>

<p>vagrant login</p>

<h1>Vagrant Shareを実行</h1>

<p>vagrant share
{% endcodeblock %}</p>

<p>最後に出てきたURLがグローバルにアクセスできるURL。『http://xxxx.vagrantshare.com』とか。</p>

<h2>GitHubリポジトリ</h2>

<p>今回のVagrantfileをGitHubにも作っておきました！</p>

<p><strong><a href="https://github.com/morizyun/vagrant-ansible-rails">morizyun/vagrant-ansible-rails</a></strong></p>

<h2>Vagrant Upで「Failed to mount folders」が出る場合</h2>

<p>Mountのエラーが出る場合はこちらを試してみるといいかもです。</p>

<p>{% codeblock lang:bash %}</p>

<h1>Vagrantにsshで接続</h1>

<p>vagrant ssh
sudo /etc/init.d/vboxadd setup
exit</p>

<h1>ローカルに戻ってVMを再起動</h1>

<p>vagrant halt
vagrant up
{% endcodeblock %}</p>

<p>ちなみにこちらの記事を参照させて頂きました！</p>

<p><strong><a href="http://qiita.com/osamu1203/items/10e19c74c912d303ca0b">vagrantでmountエラーの解決方法</a></strong></p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>Special Thanks</h2>

<p><strong><a href="http://qiita.com/kazuph/items/0d9d723b36720b9bd6ed">Vagrantでvagrantのデフォの秘密鍵じゃなくて自分のいつもの秘密鍵を使えるようにするシェルスクリプト - Qiita</a></strong></p>

<p><strong><a href="http://nekopunch.hatenablog.com/entry/2014/03/11/223250">Vagrant CloudのVagrant Shareを試してみたら凄すぎて鼻血出た - 憂鬱な世界にネコパンチ！</a></strong></p>

<p><strong><a href="http://qiita.com/hissanova/items/56ce07d5629b6d79d1b3">Rails - CentOS6.xでbundle installが遅い場合の対処 - Qiita</a></strong></p>
]]></content>
  </entry>
  
</feed>
