<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: require | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/require/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2015-07-05T18:40:53+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[公開中のFacebook EventをGraph APIから取得する]]></title>
    <link href="http://morizyun.github.io/blog/facebook-event-api-ruby-fb_graph/"/>
    <updated>2013-12-31T17:25:00+09:00</updated>
    <id>http://morizyun.github.io/blog/facebook-event-api-ruby-fb_graph</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4797370904/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4797370904&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4797370904&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4797370904" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />最近Facebook Eventでイベントを立ち上げて、参加者に連絡をとるようなことが一般的になってきました。IT勉強会系でもFacebook Eventを活用する機会が少しずつ増えてきている用に思えます。</p>

<p>ということでFacebookのGraph APIからOpenなFacebook Eventを取得するためのRubyスクリプトを作成したので備忘録メモ共有です！</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>Gemのインストール</h2>

<p>まずは、Facebook Graph APIへのAccessをサポートしてくれるGem　『<strong><a href="https://github.com/nov/fb_graph">nov/fb_graph</a></strong>』の導入です。</p>

<p>Gemfileに以下を追加して、<code>bundle install</code>を実行。</p>

<p>{% codeblock lang:ruby %}</p>

<h1>Facebook Graph API</h1>

<p>gem 'fb_graph'
{% endcodeblock %}</p>

<h2>Facebookのアクセストークンの種類</h2>

<p>Facebookのアクセストークンで特に馴染みが深いのは、次の２つ。</p>

<ol>
    <li>Facebookのユーザーに紐付いたトークン。有効期限が1~2時間のものと、60日間のものがある</li>
    <li>Facebook アプリに紐づくAccess Token。有効期限が1~2時間のものと、60日間のものがある</li>    
</ol>


<h2>Facebookアプリの登録</h2>

<p>アクセストークンを取得するためにはその前にFacebookアプリの<code>App ID, アプリのシークレットキー</code>が必要。</p>

<p>ということで、<strong><a href="https://developers.facebook.com/apps">Facebook Developers</a></strong>からFacebookアプリの<strong><code>App ID, アプリのシークレットキー</code></strong>を取得。</p>

<h2>Facebookのアクセストークの取得</h2>

<p>Userアクセストークンは『<strong><a href="https://developers.facebook.com/tools/explorer/">Graph API Explorer</a></strong>』から取得できます。Userアクセストークンは、「アクセストークンを取得」 => 「Select Permissions」でパーミッションを指定することができます。</p>

<p><a href="https://developers.facebook.com/tools/explorer/?method=GET&amp;path=100002399430009%3Ffields%3Did%2Cname"><img src="http://farm4.staticflickr.com/3780/11663346164_c8f47eee4c_z.jpg"></a></p>

<p>このままだとアクセストークンの期間が短いので、有効期限を60日間に延長します。</p>

<p>{% codeblock lang:bash %}
https://graph.facebook.com/oauth/access_token?grant_type=fb_exchange_token&amp;client_id=<App ID>&amp;client_secret=&lt;アプリのシークレットキー>&amp;fb_exchange_token=<Graph API Explorerで取得したアクセストークン>
{% endcodeblock %}</p>

<p>このURLにブラウザでアクセスすると、有効期限が60日のアクセストークンが取得できます。</p>

<h2>Facebook Graph APIから公開Eventを取得。</h2>

<p>ようやくFacebook Graph APIにアクセスするためのアクセストークンを取得できました。</p>

<p>ということで、早速Rubyスクリプトからアクセス。</p>

<p>{% codeblock lang:ruby %}</p>

<h1>Eventを検索するためのキーワード</h1>

<p>keyword = "ハッカソン"</p>

<h1>上で取得したFacebook Userのアクセストークン</h1>

<p>access_token = 'xxxx'</p>

<h1>Facebook Eventの公開されているイベントを検索 (sinceは未来のeventに限定する条件)</h1>

<p>events = FbGraph::Event.search(keyword, access_token: access_token, since: Time.now.to_i)</p>

<h1>Eventの詳細情報の取得</h1>

<p>events.each do |event|</p>

<pre><code>detail = FbGraph::Event.fetch(event.identifier, access_token: access_token)

# 公開されているイベントのみ
if detail.privacy == "OPEN"
    # detail をゴニョゴニョ
end
</code></pre>

<p>end
{% endcodeblock %}</p>

<p>ということで、Facebook Eventがますます身近になりそうです！</p>

<h2>所感</h2>

<p>Facebookのアクセストークンまわりは昔から何度もトライしていますが、未だにちゃんと理解しきれていないです。もし間違っている部分にお気づきの方がいれば、ぜひコメント下さい＾＾</p>

<h2>おまけ：Facebookアプリに紐づくアクセストークンの取得</h2>

<p>Facebookアプリに紐づくアクセストークンは、『<strong><a href="https://developers.facebook.com/tools/access_token">Access Token Tool</a></strong>』から取得できます。</p>

<p><a href="https://developers.facebook.com/tools/access_token"><img src="http://farm3.staticflickr.com/2862/11663312154_6f81ea466e_z.jpg"></a></p>

<h2>Special Thanks</h2>

<p><strong><a href="http://komasaru.github.io/blog/2013/08/29/facebook-api-access-token/">Facebook API - アクセストークン！ - mk-mode BLOG</a></strong></p>

<p><strong><a href="http://stackoverflow.com/questions/4125191/search-facebook-events-and-pagination-graph-api">Search Facebook events and pagination (Graph API) - Stack Overflow</a></strong></p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby の require と ActiveSupportの自動requireについて]]></title>
    <link href="http://morizyun.github.io/blog/ruby-require-active_support-load/"/>
    <updated>2013-12-29T10:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/ruby-require-active_support-load</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774158798/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774158798&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774158798&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774158798" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />完全に時代から取り残されていますが、今更ながらに『<strong><a href="http://www.amazon.co.jp/gp/product/4774158798/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4774158798&amp;linkCode=as2&amp;tag=morizyun00-22">パーフェクト Ruby</a></strong>』を読んでいます。</p>

<p>その中で、Rubyの<code>require</code>についてつい忘れがちになるので、備忘録メモを残しておきます。</p>

<p>またRailsのActiveSupportで自動requireしてくれる機能についても、Rubyスクリプトから簡単に書けそうなので、こちらも合わせて共有です。</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>Rubyの標準ライブラリとか、外部ファイルの読み込み</h2>

<p>Rubyの標準ライブラリとか、外部ファイルを読み込む場合。</p>

<p>{% codeblock lang:ruby %}
require 'erb'</p>

<h1>ローカルファイルのrequireは、'./'と書くべき</h1>

<p>require './hoge'
{% endcodeblock %}</p>

<h3>Special Thanks</h3>

<p>Ruby 1.9.2からは、ロードパスにカレントディレクトリが含まれなくなったそうなので、require './' としたほうがいいそうです。さっきハマってました。。。</p>

<p><strong><a href="http://blog.ruedap.com/2011/05/31/ruby-require-load-path">Rubyでrbファイルをrequireするときはドットを打つと良さそう - アインシュタインの電話番号</a></strong></p>

<h2>実行ファイル絡みた相対パスで require</h2>

<p>実行ファイル絡みた相対パスで require する場合は、<code>require_relative</code>とします。</p>

<p>{% codeblock lang:ruby %}
require_relative 'my_library'
{% endcodeblock %}</p>

<h2>$LOAD_PATHを追加</h2>

<p>requireでは、<code>$LOAD_PATH</code>に登録されている探索パスから検索します。ということで、<code>$LOAD_PATH</code>にパスを追加すると、<code>require</code>するときに相対パスにすることができます。</p>

<p>{% codeblock lang:ruby %}</p>

<h2>実行ファイルのあるディレクトリを$LOAD_PATHに追加</h2>

<p>$LOAD_PATH &lt;&lt; File.dirname(<strong>FILE</strong>)
{% endcodeblock %}</p>

<h2>RubyでActiveSupportの自動requireを使う</h2>

<p>RailsのActiveSupportがやってくれる自動requireを、Rubyスクリプト内で実行する方法がかなり便利そうだったので共有！</p>

<p>{% codeblock lang:ruby %}
require 'active_support/dependencies'
ActiveSupport::Dependencies.autoload_paths &lt;&lt; "/path/to/my_library"
{% endcodeblock %}</p>

<p>これで、<code> /path/to/my_library</code>以下にあるファイルを自動でRequireしてくれるそうです。</p>

<h3>Special Thanks</h3>

<p><strong><a href="http://blog.mirakui.com/entry/20100924/active_support">RailsじゃなくてもActiveSupportの自動require機能を使う - 昼メシ物語</a></strong></p>

<h2>所感</h2>

<p>Rubyスクリプトを書く上で、基礎中の基礎だと思いますが今までちゃんと理解できていませんでした。ちゃんと理解してRubyスクリプトをしっかり使えるようになりたい！</p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>
]]></content>
  </entry>
  
</feed>
