<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: UILabel | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/uilabel/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-12T23:56:30+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OHAttributedLabel - UILabelにWebページヘのリンクをつける[Cocoapods]]]></title>
    <link href="http://morizyun.github.io/blog/ohattributedlabel-uilabel-web-link-objectivec/"/>
    <updated>2014-07-25T20:30:00+09:00</updated>
    <id>http://morizyun.github.io/blog/ohattributedlabel-uilabel-web-link-objectivec</id>
    <content type="html"><![CDATA[<p><a href="{{ root_url }}{{ page.url }}" title="by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8214/8259787081_bdcc3abb1d.jpg" width="200" alt="Eye Catch Image" style="float: left; margin: 0 20px 20px 0;"></a>
Objective-Cネタです。UILabelにWebページヘのリンク(link)を超簡単に設置できる、『<strong><a href="https://github.com/AliSoftware/OHAttributedLabel">OHAttributedLabel</a></strong>』の紹介です！</p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_square.html %}</p>

<h2>サンプル画像</h2>

<p>こんな感じのボタンを簡単に設置できます！</p>

<p><img src="http://farm9.staticflickr.com/8214/8259787081_bdcc3abb1d.jpg" style="height: 400px;"/></p>

<h2>コードのサンプル</h2>

<h3>Podfileへの追記</h3>

<p><code>Podfile</code>に以下の内容を追記して、<code>pod install</code>を実行。</p>

<p>{% codeblock lang:ruby %}
pod 'OHAttributedLabel'
{% endcodeblock %}</p>

<h2>OHAttributedLabelの実装</h2>

<p>続いて、Webリンクをはるために<code>.m(実装ファイル)</code>にOHAttributedLabelを設置します。</p>

<p>{% codeblock lang:objectivec %}</p>

<h1>import &lt;OHAttributedLabel.h></h1>

<ul>
<li><p>(void)viewDidLoad
{
  [super viewDidLoad];</p>

<p>  // リンクを付加するOHAttributedLabel
  OHAttributedLabel *sampleLabel = [[OHAttributedLabel alloc] initWithFrame:CGRectMake(60, 100, 200, 50)];
  [sampleLabel setText:@"これがヤフーへのリンクです。"];</p>

<p>  NSRange linkRange = [sampleLabel.text rangeOfString:@"ヤフー"];
  NSURL *linkUrl = [NSURL URLWithString:@"http://www.yahoo.co.jp/"];
  [sampleLabel addCustomLink:linkUrl inRange:linkRange];</p>

<p>  // リンクをつけた文字列の色を変更
  [sampleLabel setLinkColor:[UIColor greenColor]];</p>

<p>  // リンクをつけた文字列にアンダーラインを付けないようにする
  sampleLabel.underlineLinks = NO;</p>

<p>  [self.view addSubview:sampleLabel];
}
{% endcodeblock %}</p></li>
</ul>


<p>実行すると、ヤフーの部分をクリックするとSafariが起動して、ヤフーを表示してくれます。</p>

<p><img src="http://farm9.staticflickr.com/8214/8259787081_bdcc3abb1d.jpg" style="height: 400px;"/></p>

<p>{% include custom/google_ads_square.html %}</p>

<h2>Special Thanks</h2>

<p><a href="http://eikatou.net/blog/2012/08/ios_rich_uilabel_1/">iOS開発：UILabelでリッチにテキスト表示（OHAttributedLabel）</a></p>

<h2>変更来歴</h2>

<p>(07/25 20:15) 全面書き直し</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UILabelの文字を点滅[Objective-C]]]></title>
    <link href="http://morizyun.github.io/blog/uilabel-blink-objectivec/"/>
    <updated>2012-12-08T01:00:00+09:00</updated>
    <id>http://morizyun.github.io/blog/uilabel-blink-objectivec</id>
    <content type="html"><![CDATA[<p><a href="{{ root_url }}{{ page.url }}" title="by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8068/8252883788_c0d8f7a070_m.jpg" width="200" alt="Eye Catch Image" style="float: left; margin: 0 20px 20px 0;"></a></p>

<p>Objective-Cネタです。UILabelの文字を点滅をトライしてみました。<br/>ググって探したのですが、スマートな方法が見つけられず・・・力技ですので、お見苦しいかも。もしもっといい方法があればぜひコメントをお願いします！</p>

<!-- more -->


<br style="clear:both;"/>


<h2>実装方法</h2>

<p>白 &lt;=> 赤 に変化するUILabelのサンプルです。
点滅の方法としては、赤 &lt;=> 白　の色の変化を時間とともに少しずつ行なっています。</p>

<p><code>.h(ヘッダファイル)</code>は以下の通り。</p>

<p>{% codeblock .h(ヘッダファイル) lang:objectivec %}
@interface ViewController : UIViewController {</p>

<pre><code>UILabel *bLabel;
BOOL needBlink;
float blinkTextExceptRedDelta;
float blinkTextExceptRedNum;
</code></pre>

<p>}
@end
{% endcodeblock %}</p>

<p><code>.m(実装ファイル)</code>は以下の通り。</p>

<p>{% codeblock .m(実装ファイル) lang:objectivec %}
- (void)viewDidLoad
{</p>

<pre><code>[super viewDidLoad];
[self.view setBackgroundColor:[UIColor blackColor]];

blinkTextExceptRedNum = 0.0; //赤以外の色の初期値
blinkTextExceptRedDelta = 0.05; // 色変化の割合

needBlink = YES;
bLabel = [[UILabel alloc] init];
bLabel.frame = CGRectMake(90, 100, 140, 30);
[bLabel setTextAlignment:NSTextAlignmentCenter];
[bLabel setBackgroundColor:[UIColor clearColor]];
[bLabel setTextColor:[UIColor redColor]];
bLabel.text = @"test";
[self.view addSubview:bLabel];

// 文字の点滅処理
[NSTimer scheduledTimerWithTimeInterval:0.05 target:self selector:@selector(blinkUILabel) userInfo:nil repeats:NO];
</code></pre>

<p>}</p>

<p>// 文字の点滅処理
- (void)blinkUILabel
{</p>

<pre><code>if (needBlink) {
    //赤以外の色の値
    float newExceptRedNum = blinkTextExceptRedNum + blinkTextExceptRedDelta;

    // 赤以外の色が0未満か1より大になる場合は、反転させる
    if (newExceptRedNum &lt; 0 || newExceptRedNum &gt; 1.0) {
        blinkTextExceptRedDelta = blinkTextExceptRedDelta * (-1);
        blinkTextExceptRedNum = blinkTextExceptRedNum + blinkTextExceptRedDelta;
    } else {
        blinkTextExceptRedNum = newExceptRedNum;
    }
    // この部分を変更すれば希望の色への変化も実現できると思います
    UIColor *color = [UIColor colorWithRed:1.0 green:blinkTextExceptRedNum blue:blinkTextExceptRedNum alpha:1.0];

    [bLabel setTextColor: color];
    [self.view addSubview:bLabel];

    [NSTimer scheduledTimerWithTimeInterval:0.05 target:self selector:@selector(blinkUILabel) userInfo:nil repeats:NO];
}
</code></pre>

<p>}</p>

<ul>
<li>(void)viewWillDisappear:(BOOL)blinkd
{
  // 点滅を終了させる
  needBlink = NO;
}
{% endcodeblock %}</li>
</ul>

]]></content>
  </entry>
  
</feed>
