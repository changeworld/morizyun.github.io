<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: heroku | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/heroku/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2015-07-05T18:40:53+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Errbit - Railsアプリの本番エラーをherokuで管理、メール通知する【無料枠】]]></title>
    <link href="http://morizyun.github.io/blog/errbit-heroku-rails-error-ruby/"/>
    <updated>2014-11-03T09:30:00+09:00</updated>
    <id>http://morizyun.github.io/blog/errbit-heroku-rails-error-ruby</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774162051/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774162051&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774162051&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774162051" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
サーバで稼働しているWebアプリのエラー監視して、エラーが出たら通知してくれるツール Errbitの紹介です。この分野で有名な有料のサービス Airbrakeのオープンソース版です。</p>

<p>また今回はこのサービスをheroku上で動かします。herokuの無料枠内で運用できるのでコストパフォーマンスも抜群だと思います！</p>

<p>Ruby 2.1.4で動作確認しました！</p>

<p><a href="https://github.com/errbit/errbit" class="button big primary">errbit/errbit · GitHub</a></p>

<!-- more -->


<br style="clear:both;"/>


<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>Errbitスクリーンショット</h2>

<p>まずは、Errbitのスクリーンショットです。このスクリーンショットは左上から順番に<code>アプリ一覧</code>、<code>アプリのエラー情報</code>、<code>エラー情報のサマリー</code>、<code>エラーのトレース情報</code>です。</p>

<p><img src="http://errbit.github.com/errbit/images/apps.png" width="400"><img src="http://errbit.github.com/errbit/images/app_errors.png" width="400"></p>

<p><img src="http://errbit.github.com/errbit/images/error_summary.png" width="400"><img src="http://errbit.github.com/errbit/images/error_backtrace.png" width="400"></p>

<p>Errbitの代表的な機能は次の3つです。</p>

<pre>
airbrakeのgemを使って、複数アプリのエラー情報を収集・表示
エラーが発生したらユーザーにメール通知
エラー発生時の送信先を管理
</pre>


<p>この他にもRedmineやGitHubへのissueへの登録や、Gtalk、Campfireなどへのエラー通知の機能もあるみたいです。</p>

<p>またRubyだけではなく、PHP/Pythonにも対応しているっぽいです。</p>

<h2>Herokuを初めて利用する場合</h2>

<p>もし、今回はじめてHerokuを使う場合は拙著の<strong><a href="/blog/heroku-rails4-postgresql-introduction/">Rails4でheroku Pushまでの最短手順</a></strong> の「Heroku ユーザー登録」と「ローカル環境設定」を実行して下さい。</p>

<h2>Errbitのherokuへの導入手順</h2>

<p>ローカルにErrbitのソースをダウンロード。</p>

<p>{% codeblock lang:bash %}
git clone http://github.com/errbit/errbit.git
{% endcodeblock %}</p>

<p>Gemfileの以下のコードのRubyのバージョン指定の部分を修正。</p>

<p>{% codeblock lang:bash %}
ruby '2.1.2'
{% endcodeblock %}</p>

<p>つづいてBundle installを実行。</p>

<p>{% codeblock lang:bash %}
bundle install
{% endcodeblock %}</p>

<p><code>db/seeds.rb</code>のログイン設定を修正。</p>

<p>{% codeblock lang:bash %}
admin_email = "xxx@example.com"
admin_pass  = 'password'
{% endcodeblock %}</p>

<p>アプリ名をherokuに登録。<br/>
xxxxの部分に自分のアプリ名を指定して下さい。アプリ名は早いもの順なので、他のユーザーとかぶっていたらエラーが出ます。被らない名前にしてください。</p>

<p>{% codeblock lang:bash %}
heroku create xxxx
{% endcodeblock %}</p>

<p>アプリの登録が成功すると、<code>http://xxxx.herokuapp.com/</code>というURLがもらえます。これが自分のErrbitのURLになります。<br/>
(ちなみに、この時点ではまだ見れないと思います)</p>

<p>続いてアドオンの有効化と各種設定を行います。</p>

<p>{% codeblock lang:bash %}
heroku addons:add mongolab:sandbox
heroku addons:add sendgrid:starter
heroku config:add HEROKU=true
heroku config:add SECRET_TOKEN="$(bundle exec rake secret)"</p>

<h1>heroku createで作成されたホスト名に置き換え</h1>

<p>heroku config:add ERRBIT_HOST=xxxx.herokuapp.com</p>

<h1>エラーメールのFrom(振り分けし易いメアドにするのがオススメ)</h1>

<p>heroku config:add ERRBIT_EMAIL_FROM=example@example.com
{% endcodeblock %}</p>

<p>設定画完了したら、herokuにpushします。</p>

<p>{% codeblock lang:bash %}
git add . -A &amp;&amp; git commit -m 'first commit'
git push heroku master
{% endcodeblock %}</p>

<p>さらに、seedファイル(DBの初期設定データ)の読み込みを行います。</p>

<p>{% codeblock lang:bash %}
heroku run bundle exec rake RAILS_ENV=production db:seed
{% endcodeblock %}</p>

<p>mongo DBにインデックスを追加。</p>

<p>{% codeblock lang:bash %}
heroku run bundle exec rake RAILS_ENV=production db:mongoid:create_indexes
{% endcodeblock %}</p>

<p>あとは次のコマンドを実行すると、ブラウザにerrbitのページが表示されます。</p>

<p>{% codeblock lang:bash %}
heroku open
{% endcodeblock %}</p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>ErrbitにWebアプリを登録</h2>

<p>ここまでで、herokuのErrbitにアクセス出来るようになりました。つづいて、Errbitでエラーを収集したいWebアプリを登録していきます。</p>

<p>ブラウザで<code>http://example-errbit.herokuapp.com/</code>を開くとログインが出るので、先ほどgit pushした時に出たログインIDとパスワードを入力して下さい。</p>

<p>ログインできたら<code>Urersタブ => ログインユーザー名 => edit</code>に進んでログインIDとパスワードを自分用に変更してください。(不正アクセスを防止するため)</p>

<p>次に、<code>Appsタブ => Add new apps</code>に進んで、Errbitでエラーを収集したいWebアプリを登録して下さい。</p>

<p><img src="http://farm9.staticflickr.com/8097/8396579887_dbb8f3e960_c.jpg" width="800" height="726" alt="Errbit — Add App"></p>

<p>Webアプリの登録が完了したら、設定が書かれたページが出てきます。次のセクションで使うのでメモしておいて下さい。</p>

<p><img src="http://farm9.staticflickr.com/8232/8396603659_ea3811b108_c.jpg" width="800" height="635" alt="Errbit — like coupon"></p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>Webアプリ側の設定</h2>

<p>続いて、エラーが発生したら通知をしてほしい側のWebアプリの設定を行います。<br/></p>

<p><code>Gemfile</code>に以下を追加して、<code>bundle install</code>を実行してください。</p>

<p>{% codeblock lang:ruby %}</p>

<h1>Errbitと連携</h1>

<p>gem 'airbrake'
{% endcodeblock %}</p>

<p>続いて、Railsの場合は<code>config/initializers/errbit.rb</code>を作成して以下を追加します。</p>

<p>ちなみに、Pure RubyのスクリプトでAirbrakeを使いたい場合もそれも同じコードで大丈夫でした！</p>

<p>{% codeblock lang:ruby %}
Airbrake.configure do |config|
  config.api_key = 'Errbitにアプリを登録完了するともらえます'
  config.host    = 'example-errbit.herokuapp.com'
  config.port    = 80
  config.secure  = config.port == 443
end
{% endcodeblock %}</p>

<p>これで設定は完了です。これでエラーが発生したら、Userタブで登録したメールアドレスにメールが届くようになります。ちなみに、テストでエラーを発生させた時の結果はしたようになりました。</p>

<p><img src="http://farm9.staticflickr.com/8237/8397740740_eb543b561e_c.jpg" width="800" height="663" alt="Errbit"></p>

<p><a href="https://github.com/errbit/errbit" class="button big primary">errbit/errbit · GitHub</a></p>

<p>{% include custom/google_ads_yoko_naga.html %}</p>

<h2>アイドリング状態をなくす</h2>

<p>Herokuは1時間以上アクセスがないとアイドリング状態になりますが、その際にAPIを叩くとうまく拾えない場合があります。
そんな時には、NewRelicのAvailability Monitorを使いましょう。</p>

<p>{% codeblock lang:bash %}</p>

<h1>New Relicの追加</h1>

<p>heroku addons:add newrelic:stark</p>

<h1>New Relicの画面をブラウザで表示</h1>

<p>heroku addons:open newrelic
{% endcodeblock %}</p>

<p>New Relicの画面からlicense keyを生成してnewrelic.ymlをダウンロード。<code>./config</code>にコピー。</p>

<p>また、Gemfileに以下を追加して<code>bundle install</code>。</p>

<p>{% codeblock lang:bash %}
gem 'newrelic_rpm'
{% endcodeblock %}</p>

<p>変更点をherokuにPush。</p>

<p>{% codeblock lang:bash %}
git add . -A &amp;&amp; git commit -m 'add New Relic gem' &amp;&amp; git push heroku master</p>

<h1>New Relicの画面をブラウザで表示</h1>

<p>heroku addons:open newrelic
{% endcodeblock %}</p>

<p>New Relicでアプリの中の『Availability Monitor』に進んで、監視対象のURLを設定。</p>

<p>こうすると、herokuに定期的にアクセスしてくれるようになるので、</p>

<h2>Special Thanks</h2>

<p><strong><a href="http://techracho.bpsinc.jp/baba/2012_06_27/5811">Railsのエラー管理はこれでOK！オープンソースのAirbrakeクローン、errbitを使ってみた | TechRacho</a></strong></p>

<p><strong><a href="http://quattro4.hatenablog.com/entry/2013/02/18/005230">無料でアプリケーションのエラーを賢く管理する (Errbit on heroku) - quattro_4's diary</a></strong></p>

<h2>変更来歴</h2>

<p><strong>(2013/12/29 16:25) Ruby 2.1対応</strong><br/>
<strong>(2014/06/29 16:00) Ruby 2.1.2対応、記述修正</strong><br/>
<strong>(2014/11/03 09:30) 説明書きを追記</strong><br/></p>
]]></content>
  </entry>
  
</feed>
